
&ИзменениеИКонтроль("ДанныеФайла")
Функция Saby_ДанныеФайла(ФайлСсылка, ВерсияСсылка = Неопределено, ПараметрыДанныхФайла = Неопределено) Экспорт
	
	Если ПараметрыДанныхФайла = Неопределено Тогда
		ПараметрыДанныхФайла = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	КонецЕсли;
	
	ИдентификаторФормы = ПараметрыДанныхФайла.ИдентификаторФормы;
	ВызыватьИсключение = ПараметрыДанныхФайла.ВызыватьИсключение;
	ПолучатьСсылкуНаДвоичныеДанные = ПараметрыДанныхФайла.ПолучатьСсылкуНаДвоичныеДанные;
	
	ЕстьПраваНаОбъект = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ФайлСсылка, "Ссылка", Истина);
	
	Если ЕстьПраваНаОбъект = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
    #Удаление 
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ФайлСсылка);
	#КонецУдаления 
	
	#Вставка
	Если НЕ Saby_ОбщегоНазначенияКлиентСервер.ПрисоединенныйФайлВРасширении(ФайлСсылка) Тогда
		ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ФайлСсылка);
	КонецЕсли;	
	#КонецВставки
	
	ФайлОбъект = ФайлСсылка.ПолучитьОбъект();
	
	ДанныеФайла = Новый Структура;
	ДанныеФайла.Вставить("Ссылка", ФайлОбъект.Ссылка);
	ДанныеФайла.Вставить("Редактирует", ФайлОбъект.Редактирует);
	ДанныеФайла.Вставить("Владелец", ФайлОбъект.ВладелецФайла);
	
	МетаданныеОбъектаФайла = Метаданные.НайтиПоТипу(ТипЗнч(ФайлСсылка));
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ТекущаяВерсия", МетаданныеОбъектаФайла) И ЗначениеЗаполнено(ФайлСсылка.ТекущаяВерсия) Тогда
		ТекущаяВерсияФайла = ФайлОбъект.ТекущаяВерсия;
	Иначе
		ТекущаяВерсияФайла = ФайлСсылка;
	КонецЕсли;
	
	Если ВерсияСсылка <> Неопределено Тогда
		ДанныеФайла.Вставить("Версия", ВерсияСсылка);
	Иначе
		ДанныеФайла.Вставить("Версия", ТекущаяВерсияФайла);
	КонецЕсли;
	
	ДанныеФайла.Вставить("ТекущаяВерсия", ТекущаяВерсияФайла);
	ДанныеФайла.Вставить("ХранитьВерсии", ФайлОбъект.ХранитьВерсии);
	ДанныеФайла.Вставить("ПометкаУдаления", ФайлОбъект.ПометкаУдаления);
	ДанныеФайла.Вставить("Зашифрован", ФайлОбъект.Зашифрован);
	ДанныеФайла.Вставить("ПодписанЭП", ФайлОбъект.ПодписанЭП);
	ДанныеФайла.Вставить("ДатаЗаема", ФайлОбъект.ДатаЗаема);
	
	Если ВерсияСсылка = Неопределено Тогда
		Если ПолучатьСсылкуНаДвоичныеДанные Тогда
			СсылкаНаДвоичныеДанныеФайла = 
				ПоместитьВоВременноеХранилище(РаботаСФайлами.ДвоичныеДанныеФайла(ТекущаяВерсияФайла, ВызыватьИсключение), ИдентификаторФормы);
		Иначе
			СсылкаНаДвоичныеДанныеФайла = Неопределено;
		КонецЕсли;
		ДанныеФайла.Вставить("СсылкаНаДвоичныеДанныеФайла", СсылкаНаДвоичныеДанныеФайла);
			
		ДанныеФайла.Вставить("НавигационнаяСсылка", ПолучитьНавигационнуюСсылку(ФайлСсылка));
		ДанныеФайла.Вставить("АвторТекущейВерсии", ФайлСсылка.Изменил);
		ДанныеФайла.Вставить("Кодировка", РегистрыСведений.КодировкиФайлов.ОпределитьКодировкуФайла(ТекущаяВерсияФайла, ФайлОбъект.Расширение));
	Иначе
		Если ПолучатьСсылкуНаДвоичныеДанные Тогда
			СсылкаНаДвоичныеДанныеФайла = 
				ПоместитьВоВременноеХранилище(РаботаСФайлами.ДвоичныеДанныеФайла(ВерсияСсылка, ВызыватьИсключение), ИдентификаторФормы);
		Иначе
			СсылкаНаДвоичныеДанныеФайла = Неопределено;
		КонецЕсли;
		ДанныеФайла.Вставить("СсылкаНаДвоичныеДанныеФайла", СсылкаНаДвоичныеДанныеФайла);
		
		ДанныеФайла.Вставить("НавигационнаяСсылка", ПолучитьНавигационнуюСсылку(ФайлОбъект.Ссылка));
		ДанныеФайла.Вставить("АвторТекущейВерсии", ВерсияСсылка.Автор);
		ДанныеФайла.Вставить("Кодировка", РегистрыСведений.КодировкиФайлов.ОпределитьКодировкуФайла(ВерсияСсылка, ФайлОбъект.Расширение));
	КонецЕсли;
	
	Если ДанныеФайла.Зашифрован Тогда
		
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
			МодульЭлектроннаяПодпись = ОбщегоНазначения.ОбщийМодуль("ЭлектроннаяПодпись");
			МассивСертификатовШифрования = МодульЭлектроннаяПодпись.СертификатыШифрования(ДанныеФайла.Ссылка);
		Иначе
			МассивСертификатовШифрования = Неопределено;
		КонецЕсли;
		
		ДанныеФайла.Вставить("МассивСертификатовШифрования", МассивСертификатовШифрования);
		
	КонецЕсли;
	
	ДанныеФайла.Вставить("Служебный", Ложь);
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФайлОбъект, "Служебный") Тогда
		ДанныеФайла.Служебный = ФайлОбъект.Служебный;
	КонецЕсли;
	
	РаботаСФайламиСлужебный.ЗаполнитьДополнительныеДанныеФайла(ДанныеФайла, ФайлОбъект, ВерсияСсылка);
	Возврат ДанныеФайла;
	
КонецФункции
