
&НаКлиенте
Процедура ОткрытьДокументЭПД(ПараметрыДокумента, СтандартнаяОбработка, ИндексЭПД = Неопределено) Экспорт
			
	СтандартнаяОбработка = Ложь;
	
	// Акты                     - акты к отметкам
	// СопроводительныйДокумент - сопровод. документ к грузу 
	// ДокументЭПД              - реквизит документа в поле ввода на форме 
	// ДокументТС               - документы владения ТС
	// ПутевойЛист              - путевые листы водителей	
	
	Если Не ЗначениеЗаполнено(ПараметрыДокумента.ТипЭПД)
		Или Не ЗначениеЗаполнено(ПараметрыДокумента.Тип) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан тип документа";
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;	
	
	// найдем строку из документов ЭПД
	Если ИндексЭПД = Неопределено
		И ПараметрыДокумента.ТипЭПД = "ДокументЭПД" Тогда  
		ИндексЭПД = СтрокаТаблицыДокументыЭПД(ПараметрыДокумента.Тип);
	КонецЕсли;
	
	Если ИндексЭПД = Неопределено Тогда
		СтруктураДокумента = Новый Структура;
	Иначе
		
		Если ЭтаФорма.Элементы.Найти("СопроводительныеДокументы") = Неопределено Тогда		
		    //Если ПараметрыДокумента.ТипЭПД = "ДокументТС" Или ПараметрыДокумента.ТипЭПД = "ДокументЭПД" Тогда
			ИмяТаблицы = "ДокументыЭПД";
		Иначе
			ИмяТаблицы = "СопроводительныеДокументы";
		КонецЕсли;			
		
		// Строку в структуру
		// переложим данные строки в структуру документа
		СтрокаТаблицы      = ЭтаФорма.ДокументыЭПД.Получить(ИндексЭПД);
		СтруктураДокумента = СтрокаТаблицыФормыВСтруктуру(
								ЭтаФорма, ИмяТаблицы, СтрокаТаблицы);
		
		// + собрать данные юр лиц...
		ЗаполнитьЮрЛицаДокументаЭПД(СтруктураДокумента);
		
	КонецЕсли;
	
	СтруктураДокумента.Вставить("Индекс",         ИндексЭПД);
	СтруктураДокумента.Вставить("ИмяРеквизита",   ПараметрыДокумента.ИмяРеквизита);
	СтруктураДокумента.Вставить("ТипЭПД",         ПараметрыДокумента.ТипЭПД);
	СтруктураДокумента.Вставить("ТолькоПросмотр", ПараметрыДокумента.ТолькоПросмотр);
	
	Если Не СтруктураДокумента.Свойство("Наименование") Тогда
		СтруктураДокумента.Вставить("Наименование", ПараметрыДокумента.Заголовок);
	КонецЕсли;		
		
	Если ПараметрыДокумента.Свойство("ИндексСтрокиИсходнойТЧ") Тогда
		ИндексСтрокиИсходнойТЧ = ПараметрыДокумента.ИндексСтрокиИсходнойТЧ; 
	Иначе 	
		ИндексСтрокиИсходнойТЧ = Неопределено;
	КонецЕсли;		
		
    СтруктураДокумента.Вставить("ИндексСтрокиИсходнойТЧ", ИндексСтрокиИсходнойТЧ);
	
	НачатьРедактированиеДокументаЭПД(
		ЭтаФорма, СтруктураДокумента, ПараметрыДокумента.Тип, ПараметрыДокумента.Заголовок);
			
КонецПроцедуры

&НаКлиенте
// Открывает данные ответственного лица для редактирования
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма источник вызова
//  СтруктураДокумента - Структура - см. Saby_ТНОбщегоНазначенияКлиентСервер.СтруктураОтветственногоЛица()
//  Тип - Строка - тип документа
//  ЗаголовокДляФормы - Строка - имя заголовка формы
//
Процедура НачатьРедактированиеДокументаЭПД(Форма, СтруктураДокумента, Тип, ЗаголовокДляФормы)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СтруктураДокумента", СтруктураДокумента);
	
	ОповещениеПослеРедактирования = Новый ОписаниеОповещения(
		"ПослеРедактированияДокументаЭПД", МодульКодаКлиент("ЭтаФорма"), ДополнительныеПараметры);
		
	СтруктураДокумента.Вставить("Заголовок",    ЗаголовокДляФормы);
	СтруктураДокумента.Вставить("Наименование", СтруктураДокумента.Наименование);
	СтруктураДокумента.Вставить("Тип",          Тип);
	СтруктураДокумента.Вставить("ЭтоВО",        Форма.ЭтоВО);
		
	ПараметрыОткрытияФормыОбработки = ПараметрыОткрытияФормыОбработки(
		"Обработка.Saby_ДокументыЭПД", СтруктураДокумента, Форма);
	
	ПараметрыОткрытияФормыОбработки.ОписаниеОповещенияОЗакрытии = ОповещениеПослеРедактирования;
	ПараметрыОткрытияФормыОбработки.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФормуОбработки(ПараметрыОткрытияФормыОбработки);
	
КонецПроцедуры

&НаКлиенте
// Выполняет действия после редактирования документа ЭПД
//
// Параметры:
//  Результат - Структура - см. Saby_ТНОбщегоНазначенияКлиентСервер.СтруктураОтветственногоЛица()
//  ДополнительныеПараметры - Структура - см. НачатьРедактированиеОтветственногоЛица()
//
Процедура ПослеРедактированияДокументаЭПД(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		// Обновить или заполнить данные документа
		ЗаполнитьДанныеДокументаЭПД(Результат, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

//DynamicDirective

// Выполняет действия заполнения или создания документа ЭПД в данных формы
//
// Параметры:
//  Результат - Структура - см. Saby_ТНОбщегоНазначенияКлиентСервер.СтруктураОтветственногоЛица()
//  ДополнительныеПараметры - Структура - см. НачатьРедактированиеОтветственногоЛица()
//
Процедура ЗаполнитьДанныеДокументаЭПД(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	// тут нужен признак ключа строки и сопроводительного документа
	ПараметрыСтроки = ДополнительныеПараметры.СтруктураДокумента;
			
	ИндексСтроки = ПараметрыСтроки.Индекс;
	
	Если ИндексСтроки = Неопределено Тогда
		
		Строка = ЭтаФорма.ДокументыЭПД.Добавить();
		#Если Сервер Тогда
			Строка.КлючСтроки = НовыйКлючОсновнойСтроки(ЭтаФорма, "ДокументыЭПД");
		#Иначе 	
			Строка.КлючСтроки = НовыйКлючСтроки(ЭтаФорма, "ДокументыЭПД");
		#КонецЕсли
		
	Иначе						
		Строка = ЭтаФорма.ДокументыЭПД[ИндексСтроки]; 						
	КонецЕсли;	
	
	Если Результат.Свойство("КлючСтроки") Тогда
		ЗаполнитьЗначенияСвойств(Строка, Результат, , "КлючСтроки");
	Иначе 	
		ЗаполнитьЗначенияСвойств(Строка, Результат);
	КонецЕсли;
			
	Если ПараметрыСтроки.ТипЭПД = "СопроводительныйДокумент" Тогда  
		Строка.ЭтоСопроводительныйДокумент = Истина; 
	КонецЕсли;
	
	// Заполним наименование документа на форме
	Если ПараметрыСтроки.ТипЭПД = "ДокументЭПД" Тогда
		ЭтаФорма[ПараметрыСтроки.ИмяРеквизита] = Результат.Наименование;
	КонецЕсли;
	
	Если ПараметрыСтроки.Тип = "ОтветственныйНаОсновании" Тогда
		#Если Сервер Тогда
			МодульКода("ЭтаФорма").ЗаполнитьСписокВыбораОтветственногоНаОсновании(Результат.Наименование);
		#Иначе 	
			МодульКодаКлиент("ЭтаФорма").ЗаполнитьСписокВыбораОтветственногоНаОсновании(Результат.Наименование);
		#КонецЕсли
	КонецЕсли;
	
	// Заполним наименование акта
	ЗаполнитьДанныеАктовПутевыхЛистов(ПараметрыСтроки, Результат, Строка);
				
	// Заполнить данные Юр лиц
	ДобавитьЮрЛицаДокументаЭПД(Строка.КлючСтроки, Результат.ДанныеЮрЛиц);
	
КонецПроцедуры

//DynamicDirective

Процедура ЗаполнитьДанныеАктовПутевыхЛистов(ПараметрыСтроки, Результат, Строка)
	
	Если ПараметрыСтроки.ТипЭПД <> "Акты"
		И ПараметрыСтроки.ТипЭПД <> "ПутевыеЛисты" Тогда
		Возврат;
	КонецЕсли;
		
	Если ЭтаФорма.ТекущийЭлемент.Имя = "ПутевыеЛисты" Тогда
		СтрокаТЧ = Элементы.ПутевыеЛисты.ТекущиеДанные;	
	ИначеЕсли ЭтаФорма.ТекущийЭлемент.Имя = "Акты_Выгрузка" Тогда
		СтрокаТЧ = Элементы.Акты_Выгрузка.ТекущиеДанные;
	Иначе	
		СтрокаТЧ = Элементы.Акты.ТекущиеДанные;
	КонецЕсли;
	
	СтрокаТЧ.Документ                = Результат.Наименование;
	СтрокаТЧ.КлючСтроки_ДокументыЭПД = Строка.КлючСтроки;
		
КонецПроцедуры

//DynamicDirective
 
Процедура ДобавитьЮрЛицаДокументаЭПД(КлючСтроки, ЮрЛица)
	
	// Очистим предыдущие записи
	Отбор = Новый Структура;
	Отбор.Вставить("КлючСтроки_ДокументыЭПД", КлючСтроки);
	
	НайденныеСтроки = ЭтаФорма.ДанныеЮрЛиц.НайтиСтроки(Отбор);	
	Для Каждого Строка Из НайденныеСтроки Цикл 
		ЭтаФорма.ДанныеЮрЛиц.Удалить(Строка);
	КонецЦикла;		
		
	// Добавим новые записи
	Для Каждого ЮрЛицо Из ЮрЛица Цикл
		
		НоваяСтрока = ЭтаФорма.ДанныеЮрЛиц.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЮрЛицо);
		НоваяСтрока.КлючСтроки_ДокументыЭПД = КлючСтроки;
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЮрЛицаДокументаЭПД(СтруктураДокумента) Экспорт
	
    Отбор = Новый Структура;
	Отбор.Вставить("КлючСтроки_ДокументыЭПД", СтруктураДокумента.КлючСтроки);
	
	НайденныеСтроки = ЭтаФорма.ДанныеЮрЛиц.НайтиСтроки(Отбор);
	
	ЮрЛица = Новый Массив;	
	Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		Структура = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиент").СтрокаТаблицыФормыВСтруктуру(
						ЭтаФорма, "ДанныеЮрЛиц", СтрокаТаблицы);
		ЮрЛица.Добавить(Структура); 
	КонецЦикла;

	СтруктураДокумента.Вставить("ДанныеЮрЛиц", ЮрЛица);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыЭПДОткрыть(ИмяЭлемента, Заголовок, ТипЭПД, ТолькоПросмотр = Ложь) Экспорт
	
	// КГрузу, КТранспортнойНакладной, ПередачиЦенностей  	
	Если ИмяЭлемента <> "СопроводительныеДокументыНаименование"
		И ИмяЭлемента <> "ДокументыЭПДНаименование" Тогда
		Возврат;
	КонецЕсли;	
	
	ИмяТаблицы = СтрЗаменить(ИмяЭлемента, "Наименование", "");
	
	ТекущийЭлемент = Элементы[ИмяТаблицы];	
	ТекущиеДанные  = ТекущийЭлемент.ТекущиеДанные;
	
	ПараметрыДокумента = ПараметрыДокументаЭПД(
							ТекущиеДанные.Тип, 
							Заголовок, , 
							ТипЭПД,
	                        ТолькоПросмотр);						
							
	ИндексЭПД = ЭтаФорма.ДокументыЭПД.Индекс(ТекущиеДанные);						
							
	ОткрытьДокументЭПД(ПараметрыДокумента, Неопределено, ИндексЭПД);
		
КонецПроцедуры

&НаКлиенте
Процедура ДокументыТСДокументыОткрыть(ИмяЭлемента) Экспорт
	
	// КГрузу, КТранспортнойНакладной, ПередачиЦенностей  	
	Если ИмяЭлемента <> "ДокументыЭПДНаименование" Тогда
		Возврат;
	КонецЕсли;	
				
	ТекущийЭлемент = Элементы.ДокументыЭПД;	
	ТекущиеДанные  = ТекущийЭлемент.ТекущиеДанные;
	
	ПараметрыДокумента = ПараметрыДокументаЭПД(
							ТекущиеДанные.Тип, 
							"Документ владения", , 
							"ДокументыЭПД");						
							
	ИндексЭПД = ЭтаФорма.ДокументыЭПД.Индекс(ТекущиеДанные);						
							
	ОткрытьДокументЭПД(ПараметрыДокумента, Неопределено, ИндексЭПД);
			
КонецПроцедуры

&НаКлиенте
Процедура АктыОткрыть(ИмяЭлемента, СтандартнаяОбработка) Экспорт
	
	Если ИмяЭлемента <> "АктыДокумент" 
		И ИмяЭлемента <> "Акты_ВыгрузкаДокумент" Тогда
		Возврат;
	КонецЕсли;	
	
	Если ИмяЭлемента = "Акты_ВыгрузкаДокумент" Тогда
		ТекущийЭлемент    = Элементы.Акты_Выгрузка;
		ПросмотрДокумента = Элементы.Группа_ОтметкиВыгрузкаТЧ.ТолькоПросмотр;
	Иначе
		
		ТекущийЭлемент = Элементы.Акты;
		Если Элементы.Найти("Группа_ОтметкиПогрузка") = Неопределено Тогда
			ПросмотрДокумента = Элементы.ГруппаОтметкиИАкты.ТолькоПросмотр;
		Иначе				
			ПросмотрДокумента = Элементы.Группа_ОтметкиПогрузка.ТолькоПросмотр;
		КонецЕсли;
				
	КонецЕсли;
	
	ТекущиеДанные = ТекущийЭлемент.ТекущиеДанные;
	
	ПараметрыДокумента = ПараметрыДокументаЭПД(ТекущиеДанные.Тип, "Акт", , "Акты", ПросмотрДокумента);
									
	// Акты отельная таблица с ключом связи
	ОткрытьДокументЭПДСвязаннойТаблицы(ТекущийЭлемент, ТекущиеДанные, ПараметрыДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ПутевыеЛистыОткрыть(ИмяЭлемента, СтандартнаяОбработка) Экспорт
	
	Если ИмяЭлемента <> "ПутевыеЛистыДокумент" Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущийЭлемент    = Элементы[ИмяЭлемента];
	ПросмотрДокумента = Элементы.ГруппаВодители.ТолькоПросмотр;
	ТекущиеДанные     = ТекущийЭлемент.ТекущиеДанные;
	
	ПараметрыДокумента = ПараметрыДокументаЭПД("ПутевойЛист", "Путевой лист", , "ПутевыеЛисты", ПросмотрДокумента);
		
	// Путевые листы отельная таблица с ключом связи
	ОткрытьДокументЭПДСвязаннойТаблицы(ТекущийЭлемент, ТекущиеДанные, ПараметрыДокумента);
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументЭПДСвязаннойТаблицы(ТекущийЭлемент, ТекущиеДанные, ПараметрыДокумента)
	
	ПараметрыДокумента.Вставить("ИндексСтрокиИсходнойТЧ", ТекущийЭлемент.ТекущаяСтрока);
	
	ИндексЭПД = Неопределено;
	Если ЗначениеЗаполнено(ТекущиеДанные.КлючСтроки_ДокументыЭПД) Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("КлючСтроки", ТекущиеДанные.КлючСтроки_ДокументыЭПД);
		
		НайденныеСтроки = ЭтаФорма.ДокументыЭПД.НайтиСтроки(Отбор);		
		Если НайденныеСтроки.Количество() Тогда
			ИндексЭПД = ЭтаФорма.ДокументыЭПД.Индекс(НайденныеСтроки[0]);
		КонецЕсли;
		
	КонецЕсли;	
	
	ОткрытьДокументЭПД(ПараметрыДокумента, Неопределено, ИндексЭПД);
	
КонецПроцедуры

&НаКлиенте
// Формирование параметров для открытия формы документа ЭПД
//
// Параметры:
//	Тип - Строка - значение согласно списка доступных типод документа из "Saby_ТипыДокумента"
//  Заголовок - Строка - заголовок формы для пользователя
//  ИмяРеквизита - Строка - имя реквизита формы, источника вызова 
//  ТипЭПД - Строка - тип для определения классификации документа внутри обработчика кода 
//  ТолькоПросмотр - Булево - признак что форму нужно открыть только для просмора
//
Функция ПараметрыДокументаЭПД(Тип, Заголовок, ИмяРеквизита = Неопределено, ТипЭПД = "", ТолькоПросмотр = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(ТипЭПД) Тогда
		ЭПДТип = Тип;
	Иначе
        ЭПДТип = ТипЭПД; 	
	КонецЕсли;	
	
	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("Тип",            Тип);
	ПараметрыДокумента.Вставить("ИмяРеквизита",   ИмяРеквизита);
	ПараметрыДокумента.Вставить("Заголовок",      Заголовок);
	ПараметрыДокумента.Вставить("ТипЭПД",         ЭПДТип);
	ПараметрыДокумента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	
    Возврат ПараметрыДокумента;
	
КонецФункции

&НаКлиенте
Функция СтрокаТаблицыДокументыЭПД(Тип)
	
	// Обновить или заполнить данные документа
	Отбор = Новый Структура;
	Отбор.Вставить("Тип", Тип);
	Отбор.Вставить("ЭтоСопроводительныйДокумент", Ложь); // взять из доп параметров
	
	НайденныеСтроки = ЭтаФорма.ДокументыЭПД.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() Тогда
		Индекс = ЭтаФорма.ДокументыЭПД.Индекс(НайденныеСтроки[0]);
	Иначе 
		Индекс = Неопределено;
	КонецЕсли;	
	
	Возврат Индекс;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьДокументыЭПДПоКлючу(Форма, ПараметрыФормы, ФормаОбъект) Экспорт
	
	// ищем документ по роли
	// определяем тип роли и ищем по типу
	
	Массив = Новый Массив;
	Если ЗначениеЗаполнено(ПараметрыФормы.КлючСтроки)
		И ЗначениеЗаполнено(ПараметрыФормы.КлючСтроки_ДокументыЭПД) Тогда
				
		Отбор = Новый Структура("КлючСтроки", ПараметрыФормы.КлючСтроки_ДокументыЭПД);	
		НайденныеСтроки = ФормаОбъект.ДокументыЭПД.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаЭПД Из НайденныеСтроки Цикл
			ДанныеДокумента = СтрокаТаблицыФормыВСтруктуру(Форма, "ДокументыЭПД", СтрокаЭПД);
			Массив.Добавить(ДанныеДокумента);
		КонецЦикла;
		
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДокументыЭПД", Массив);
		
КонецПроцедуры	

&НаКлиенте
Функция СформироватьДокументыЭПД(ТаблицаДокументовЭПД, ТаблицаЮрЛиц) Экспорт
	
	РезультатФункции = Новый Массив;
	
	Если ЭтаФорма.ЭтоВО
		И ТаблицаДокументовЭПД.Количество() Тогда
		
		Для Каждого СтрокаДокументов Из ТаблицаДокументовЭПД Цикл
			
			СтруктураДанных = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер").СтруктураДокументаЭПД();
			ЗаполнитьЗначенияСвойств(СтруктураДанных, СтрокаДокументов);
									
			// + связанные данные юр лиц 
			Отбор = Новый Структура;
			Отбор.Вставить("КлючСтроки_ДокументыЭПД", СтрокаДокументов.КлючСтроки);
			
			НайденныеСтроки = ТаблицаЮрЛиц.НайтиСтроки(Отбор);
			Для Каждого СтрокаЮрлиц Из НайденныеСтроки Цикл
				
				ЮрЛицо = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиент").СтрокаТаблицыФормыВСтруктуру(
							ЭтаФорма, "ДанныеЮрЛиц", СтрокаЮрлиц);
				
				СтруктураДанных.ДанныеЮрЛиц.Добавить(ЮрЛицо);
				
			КонецЦикла;
			
			РезультатФункции.Добавить(СтруктураДанных);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Процедура УдалитьДокументыЭПДПоОтбору(ФормаОбъект, Отбор) Экспорт

	СтрокиДокументовЭПД = ФормаОбъект.ДокументыЭПД.НайтиСтроки(Отбор);
	Для Каждого СтрокаЭПД Из СтрокиДокументовЭПД Цикл
		
		ФормаОбъект.ДокументыЭПД.Удалить(СтрокаЭПД);
		// вычистим данные связанных юр лиц
		ФормаОбъект.УдаляемыеКлючи_ДокументыЭПД.Добавить(СтрокаЭПД.КлючСтроки);
		
	КонецЦикла;
	
	Если СтрокиДокументовЭПД.Количество() Тогда  
		ПодключитьОбработчикОжидания("УдалитьСвязанныеСтроки", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтрокуДокументаЭПД(Элемент, Копирование) Экспорт
	
	Если Не Копирование Тогда
		Возврат;
	КонецЕсли;	
	
	НоваяСтрокаАкта = Элемент.ТекущиеДанные;
		
	Отбор = Новый Структура("КлючСтроки", НоваяСтрокаАкта.КлючСтроки_ДокументыЭПД);
	НайденныеСтроки = ЭтаФорма.ДокументыЭПД.НайтиСтроки(Отбор);
	Если Не НайденныеСтроки.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ДокументЭПД = НайденныеСтроки[0];
	
	// Скопировать данные ЮрЛиц			
	СкопироватьСвязанныеДанныеДокументаЭПД(ЭтаФорма, ДокументЭПД);
	
	// Добавить новый документ ЭПД
	НоваяСтрокаЭПД = ЭтаФорма.ДокументыЭПД.Добавить();	
	НоваяСтрокаЭПД.КлючСтроки = НовыйКлючСтроки(ЭтаФорма, "ДокументыЭПД");
	ЗаполнитьЗначенияСвойств(НоваяСтрокаЭПД, ДокументЭПД, , "КлючСтроки");
		
	НоваяСтрокаАкта.КлючСтроки_ДокументыЭПД = НоваяСтрокаЭПД.КлючСтроки;
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСвязанныеДанныеДокументаЭПД(Форма, ТекущиеДанные) Экспорт
	
    ТекущийКлюч = ТекущиеДанные.КлючСтроки;
	
	Отбор = Новый Структура("КлючСтроки_ДокументыЭПД", ТекущийКлюч);	
	НайденныеЮрЛица = Форма.ДанныеЮрЛиц.НайтиСтроки(Отбор);
	
	Для Каждого СтрокаЮрЛиц Из НайденныеЮрЛица Цикл
		
		// скопируем юр лица
		НоваяСтрокаЮрЛиц = Форма.ДанныеЮрЛиц.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЮрЛиц, СтрокаЮрЛиц, , "КлючСтроки_ДокументыЭПД,КлючСтроки");
		
	    НоваяСтрокаЮрЛиц.КлючСтроки_ДокументыЭПД = Форма.МаксимальныйКлючСтроки_ДокументыЭПД + 1; 
										
	КонецЦикла;
	
КонецПроцедуры

