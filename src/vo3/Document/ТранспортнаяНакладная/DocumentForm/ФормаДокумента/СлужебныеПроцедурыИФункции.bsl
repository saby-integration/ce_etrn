
&НаКлиенте
Процедура Записать(ПараметрыЗаписи = Неопределено) Экспорт
	
	ЭтаФорма.Составитель_НаОснованииДокумент = ЭтаФорма.Оформитель_Основание;
	
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура Прочитать() Экспорт
	
	ПриЧтенииСозданииПослеЗаписиНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Функция ИсточникДанныхКлиент()
	
	Возврат ЭтаФорма;
	
КонецФункции

&НаСервере
Функция ИсточникДанных()
	
	Возврат ЭтаФорма;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДанныеТитулов(ПараметрыФормыРасшифровки)
	
	ПараметрыФормыРасшифровки.ДанныеТитулов = ЭтаФорма.ДанныеТитулов;
	
КонецПроцедуры

&НаСервере
Функция ОбъектОбработки()
	
	Возврат РеквизитФормыВЗначение("Объект");
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтруктуруДокумента(Параметры = Неопределено) Экспорт
	
	ЭтаФорма.ЭтоВО = Истина;
	
	СтруктураДокумента = Новый Структура;
	
	Для Каждого Реквизит Из ПолучитьРеквизиты() Цикл
		
		СтруктураДокумента.Вставить(Реквизит.Имя, ЭтаФорма[Реквизит.Имя]);
		
		Если СтруктураДокумента[Реквизит.Имя] = "Заполнить" Тогда
			СтруктураДокумента[Реквизит.Имя] = "";
		КонецЕсли;
		
		Если Не Реквизит.ТипЗначения.СодержитТип(Тип("ТаблицаЗначений")) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураДокумента.Удалить(Реквизит.Имя);
		
		ДобавитьТаблицуЗначений(СтруктураДокумента, Реквизит);
		
	КонецЦикла;
	
	Если Параметры <> Неопределено Тогда
		ЭтаФорма.Идентификатор     = Параметры.Идентификатор;
		ЭтаФорма.ДокументОснование = Параметры.ДокументОснование;
	КонецЕсли;
	
	СтруктураДокумента.Вставить("ИмяМетаданных", "Saby_ТранспортнаяНакладная");
	СтруктураДокумента.Вставить("Идентификатор", ЭтаФорма.Идентификатор);
	СтруктураДокумента.Вставить("Комментарий",   "");
	СтруктураДокумента.Вставить("ДатаИзменения", "");
	СтруктураДокумента.Вставить("Валюта",        "");
	СтруктураДокумента.Вставить("Номер",         ЭтаФорма.НомерСбис);
	
	СтруктураДокумента.Вставить("Отгрузка_ОтветственныйСтрокой", СтруктураДокумента.ОтветственныйОтгрузка);
	СтруктураДокумента.Вставить("СоставительСтрокой",            СтруктураДокумента.ОформительСтрокой);
	
	СтруктураДокумента.Вставить("СопроводительныеДокументы", Новый Массив);
	
	ЭтаФорма.Ссылка = СтруктураДокумента;
	
	Если ЭтаФорма.ДвоичныеДанныеОбработки = Неопределено Тогда
		
		ОбъектОбработки = РеквизитФормыВЗначение("Объект");
		ЭтаФорма.ДвоичныеДанныеОбработки = ОбъектОбработки.ИспользуемоеИмяФайла;
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТаблицуЗначений(СтруктураДокумента, Реквизит)
	
	Если Реквизит.Имя = "ДокументыЭПД" Тогда
		ДобавитьДокументыЭПД(СтруктураДокумента, Реквизит);
	Иначе
		МассивСтрок = МодульКода("Saby_ТНОбщегоНазначенияСервер").ТаблицаЗначенийВМассивЭПД(ЭтаФорма[Реквизит.Имя].Выгрузить());
		СтруктураДокумента.Вставить(Реквизит.Имя, МассивСтрок);
	КонецЕсли;
	
	ДобавитьВодителей(СтруктураДокумента, Реквизит);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВодителей(СтруктураДокумента, Реквизит)
	
	Если Реквизит.Имя <> "ОтветственныеЛица" Тогда
		Возврат;
	КонецЕсли;
	
	ОтборВодителей = Новый Структура("Роль", "Водитель");
	МассивСтрок = МодульКода("Saby_ТНОбщегоНазначенияСервер").ТаблицаЗначенийВМассивЭПД(
		ЭтаФорма[Реквизит.Имя].Выгрузить(ОтборВодителей));
	СтруктураДокумента.Вставить("Водители", МассивСтрок);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьДокументыЭПД(СтруктураДокумента, Реквизит)
	
	СтруктураДокумента.Вставить("ДокументыЭПД", Новый Массив);
	СтруктураДокумента.Вставить("ПутевыеЛисты", Новый Массив);
	
	ОтборЮрЛиц = Новый Структура("КлючСтроки_ДокументыЭПД");
	
	Для Каждого СтрокаДокументаЭПД Из ЭтаФорма.ДокументыЭПД Цикл
		
		СтруктураДокументаЭПД = МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").СтруктураДокументаЭПД();
		ЗаполнитьЗначенияСвойств(СтруктураДокументаЭПД, СтрокаДокументаЭПД);
		ОтборЮрЛиц.КлючСтроки_ДокументыЭПД = СтруктураДокументаЭПД.КлючСтроки;
		НайденныеСтроки = ЭтаФорма.ДанныеЮрЛиц.НайтиСтроки(ОтборЮрЛиц);
		
		Для Каждого СтрокаЮрЛица Из НайденныеСтроки Цикл
			СтруктураЮрЛица = МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ШаблонДанныхЮрЛица();
			ЗаполнитьЗначенияСвойств(СтруктураЮрЛица, СтрокаЮрЛица);
			СтруктураДокументаЭПД.ДанныеЮрЛиц.Добавить(СтруктураЮрЛица);
		КонецЦикла;
		
		Если СтруктураДокументаЭПД.Тип = ЗначениеМетаданных("Saby_ТипыДокумента.ПутевойЛист") Тогда
			
			СтруктураДокументаЭПД.Вставить("Документ", Строка(СтруктураДокументаЭПД.КлючСтроки));
			СтруктураДокумента.ПутевыеЛисты.Добавить(СтруктураДокументаЭПД);
			
		КонецЕсли;
		
		СтруктураДокумента.ДокументыЭПД.Добавить(СтруктураДокументаЭПД);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторПриИзменении(Элемент)

	ЭтаФорма.Ссылка.Идентификатор = ЭтаФорма.Идентификатор;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборДокументовЭПД()
	
	// Сопроводительные документы
	Отбор = Новый Структура;
	Отбор.Вставить("ЭтоСопроводительныйДокумент", Истина);
	
	ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	
	Элементы.СопроводительныеДокументы.ОтборСтрок = ОтборСтрок;
	
	// Путевые листы
	Отбор = Новый Структура;
	Отбор.Вставить("Тип", "ПутевойЛист");
	
	ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	
	Элементы.ПутевыеЛисты.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьУсловноеОформление()
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.СопроводительныеДокументыТип);
	МассивЭлементов.Добавить(Элементы.АктыТип);
	МассивЭлементов.Добавить(Элементы.Акты_ВыгрузкаТип);
	МассивЭлементов.Добавить(Элементы.ОтправительКонтактныеДанныеТип);
	МассивЭлементов.Добавить(Элементы.ПолучательКонтактныеДанныеТип);
	МассивЭлементов.Добавить(Элементы.ПеревозчикКонтактныеДанныеТип);
	МассивЭлементов.Добавить(Элементы.ВладелецОбъектаКонтактныеДанныеТип);
	МассивЭлементов.Добавить(Элементы.ОтгрузчикКонтактныеДанныеТип);
	
	Для Каждого Элемент Из МассивЭлементов Цикл
		Для Каждого ЭлементСпискаВыбора Из Элемент.СписокВыбора Цикл
			ЭлементУсловногоОформления = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ЭлементСпискаВыбора.Представление);
			Условие = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Условие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элемент.ПутьКДанным);
			Условие.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			Условие.ПравоеЗначение = ЭлементСпискаВыбора.Значение;
			Поле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			Поле.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция МодульФоновогоЗаданияСервер()
	
	Возврат МодульКодаКлиент(Неопределено);
	
КонецФункции	

&НаКлиенте
Функция МодульФоновогоЗаданияКлиент()
	
	Возврат МодульКодаКлиент(Неопределено);
	
КонецФункции

&НаСервере
Процедура УдалитьСвязанныеЗаписиВО(ИсточникДанных) Экспорт
	
	ИмяТаблицыЭПД = "ДокументыЭПД"; 
	
	// Транспортные средства
	КлючиТС = СтруктураСвязанныхДанныхДляУдаления(УдаляемыеКлючи_ТранспортныеСредства, "ТранспортногоСредства");	
	УдаляемыеСтрокиТС = Новый Структура(ИмяТаблицыЭПД, КлючиТС);
	УдалитьСтроки(ИсточникДанных, УдаляемыеСтрокиТС);
	
	// Водители  
	КлючиВодители = СтруктураСвязанныхДанныхДляУдаления(УдаляемыеКлючи_ОтветственныеЛица, "ОтветственныеЛица");			
	УдаляемыеСтрокиВодители = Новый Структура(ИмяТаблицыЭПД, КлючиВодители);
	УдалитьСтроки(ИсточникДанных, УдаляемыеСтрокиВодители);
	
	// Отметки			
	// Найдем все Акты для удаления и по ним связанные ДокументовЭПД
	Для Каждого КлючОтметки Из УдаляемыеКлючи_Отметки Цикл
		
		Отбор = Новый Структура("КлючСтроки_Отметки", КлючОтметки);
		НайденныеСтроки = ИсточникДанных.Акты.НайтиСтроки(Отбор);
		Для Каждого СтрокаАкты Из НайденныеСтроки Цикл
			УдаляемыеКлючи_ДокументыЭПД.Добавить(СтрокаАкты.КлючСтроки_ДокументыЭПД);
		КонецЦикла;
				
	КонецЦикла;	
			
	// ДокументыЭПД 
	КлючиЭПД = СтруктураСвязанныхДанныхДляУдаления(УдаляемыеКлючи_ДокументыЭПД, ИмяТаблицыЭПД);
	УдаляемыеСтрокиЭПД = Новый Структура("ДанныеЮрЛиц", КлючиЭПД);			
	УдалитьСтроки(ИсточникДанных, УдаляемыеСтрокиЭПД);
			
	// сбросим списки
	ЭтаФорма.УдаляемыеКлючи_ДокументыЭПД.Очистить();
	ЭтаФорма.УдаляемыеКлючи_ТранспортныеСредства.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуДляСтарыхПлатформ()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	ВерсияПлатформыБольшеИлиРавна8_3_12 = МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").СравнитьВерсии(
		СистемнаяИнформация.ВерсияПриложения, "8.3.12.0") >= 0;
		
	Если Строка(Метаданные.РежимСовместимости) = "НеИспользовать" Тогда
		ВерсияСовместимостиБольшеИлиРавна8_3_12 = Истина;
	Иначе
		ВерсияСовместимостиБольшеИлиРавна8_3_12 = МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").СравнитьВерсии(
			Метаданные.РежимСовместимости, "8.3.12.0") >= 0;
	КонецЕсли;
		
	Если ВерсияПлатформыБольшеИлиРавна8_3_12 И ВерсияСовместимостиБольшеИлиРавна8_3_12 Тогда
		МассивИменГрупп = Новый Массив;
		МассивИменГрупп.Добавить("Группа_ДопКонтактыГрузоотправитель");
		МассивИменГрупп.Добавить("Группа_ДопКонтактыГрузополучатель");
		МассивИменГрупп.Добавить("Группа_ДопКонтактыПеревозчик");
		МассивИменГрупп.Добавить("Группа_ДопКонтактыВладелец");
		МассивИменГрупп.Добавить("Группа_ДопКонтактыОтгрузка");
		МассивИменГрупп.Добавить("Группа_Прицепы");
		МассивИменГрупп.Добавить("Группа_Водители");
		Для Каждого ИмяГруппы Из МассивИменГрупп Цикл
			Элементы[ИмяГруппы].Поведение             = ПоведениеОбычнойГруппы.Всплывающая;
			Элементы[ИмяГруппы].ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		КонецЦикла;
	Иначе
		Элементы.ОчиститьДокументОснование.ЦветРамки    = ЦветаСтиля.ЦветФонаФормы;
		Элементы.НастройкаДокументовОснований.ЦветРамки = ЦветаСтиля.ЦветФонаФормы;
		МассивИменОтступов = Новый Массив;
		МассивИменОтступов.Добавить("ДекорацияОтступГрузоотправитель");
		МассивИменОтступов.Добавить("ДекорацияОтступГрузополучатель");
		МассивИменОтступов.Добавить("ДекорацияОтступПеревозчик");
		МассивИменОтступов.Добавить("ДекорацияОтступВладелецОбъекта");
		МассивИменОтступов.Добавить("ДекорацияОтступОтгрузка");
		Для Каждого ИмяОтступа Из МассивИменОтступов Цикл
			Элементы[ИмяОтступа].Видимость = Истина;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#Область include_etrn_base_CommonModule_ТНВыгрузкаСервер_ВзаимодействиеСОнлайном //&НаКлиенте
#КонецОбласти // include_etrn_base_CommonModule_ТНВыгрузкаСервер_ВзаимодействиеСОнлайном //&НаКлиенте

#Область include_etrn_src_vo3_CommonModule_ТНОбщегоНазначенияСервер_ЗаполнениеНаОснованииИНИ //&НаКлиенте
#КонецОбласти // include_etrn_src_vo3_CommonModule_ТНОбщегоНазначенияСервер_ЗаполнениеНаОснованииИНИ //&НаКлиенте

#Область include_etrn_src_vo3_CommonModule_ТНОбщегоНазначенияКлиентСервер_ЗаполнениеНаОснованииИНИ //&НаКлиенте
#КонецОбласти // include_etrn_src_vo3_CommonModule_ТНОбщегоНазначенияКлиентСервер_ЗаполнениеНаОснованииИНИ //&НаКлиенте

#Область include_etrn_src_vo3_CommonModule_ВыполнениеФункцииНаСервере //&НаСервере
#КонецОбласти // include_etrn_src_vo3_CommonModule_ВыполнениеФункцииНаСервере //&НаСервере

#Область include_etrn_src_vo3_CommonModule_ОпределениеМодуляКода
#КонецОбласти // include_etrn_src_vo3_CommonModule_ОпределениеМодуляКода

#Область include_etrn_src_vo3_CommonModule_ОпределениеМодуляКодаКлиент
#КонецОбласти // include_etrn_src_vo3_CommonModule_ОпределениеМодуляКодаКлиент

#Область include_etrn_src_vo3_CommonModule_ЗначениеМетаданных
#КонецОбласти // include_etrn_src_vo3_CommonModule_ЗначениеМетаданных

#Область include_etrn_base_CommonModule_ТНОбщегоНазначенияКлиент_CommonModule
#КонецОбласти // include_etrn_base_CommonModule_ТНОбщегоНазначенияКлиент_CommonModule

#Область include_etrn_base_CommonModule_ТНОбщегоНазначенияКлиентСервер_CommonModule //&НаКлиенте
#КонецОбласти // include_etrn_base_CommonModule_ТНОбщегоНазначенияКлиентСервер_CommonModule //&НаКлиенте

#Область include_etrn_base_CommonModule_ТНОбщегоНазначенияСервер_CommonModule
#КонецОбласти // include_etrn_base_CommonModule_ТНОбщегоНазначенияСервер_CommonModule

#Область include_etrn_base_Document_ТранспортнаяНакладная_РеквизитыТитулов
#КонецОбласти // include_etrn_base_Document_ТранспортнаяНакладная_РеквизитыТитулов

#Область include_etrn_src_vo3_CommonModule_КартинкаИнтерфейса //&НаКлиенте
#КонецОбласти // include_etrn_src_vo3_CommonModule_КартинкаИнтерфейса //&НаКлиенте

#Область include_etrn_src_vo3_CommonModule_КартинкаИнтерфейсаКлиент
#КонецОбласти // include_etrn_src_vo3_CommonModule_КартинкаИнтерфейсаКлиент

#Область include_etrn_src_vo3_CommonModule_ДокументыЭПД //&НаКлиенте
#КонецОбласти // include_etrn_src_vo3_CommonModule_ДокументыЭПД //&НаКлиенте

#Область include_etrn_src_vo3_CommonModule_ОпасныйГруз
#КонецОбласти // include_etrn_src_vo3_CommonModule_ОпасныйГруз

#Область include_core_base_Криптография_НаКлиенте1С
#КонецОбласти

