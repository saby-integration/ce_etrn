
&НаКлиенте
Процедура Записать(ПараметрыЗаписи = Неопределено) Экспорт
	
КонецПроцедуры

&НаКлиенте
Функция ИсточникДанныхКлиент()
	
	Возврат ЭтаФорма;
	
КонецФункции

&НаСервере
Функция ИсточникДанных()
	
	Возврат ЭтаФорма;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДанныеТитулов(ПараметрыФормыРасшифровки)
	
	ПараметрыФормыРасшифровки.ДанныеТитулов = ЭтаФорма.ДанныеТитулов;
	
КонецПроцедуры

&НаСервере
Функция ОбъектОбработки()
	
	Возврат РеквизитФормыВЗначение("Объект");
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтруктуруДокумента()
	
	СтруктураДокумента = Новый Структура;
	
	Для Каждого Реквизит Из ПолучитьРеквизиты() Цикл
		
		СтруктураДокумента.Вставить(Реквизит.Имя, ЭтаФорма[Реквизит.Имя]);
		
		Если СтруктураДокумента[Реквизит.Имя] = "Заполнить" Тогда
			СтруктураДокумента[Реквизит.Имя] = "";
		КонецЕсли;
		
		Если Не Реквизит.ТипЗначения.СодержитТип(Тип("ТаблицаЗначений")) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураДокумента.Удалить(Реквизит.Имя);
		
		МассивСтрок = МодульКода("Saby_ТНОбщегоНазначенияСервер").ТаблицаЗначенийВМассивЭПД(ЭтаФорма[Реквизит.Имя].Выгрузить());
		СтруктураДокумента.Вставить(Реквизит.Имя, МассивСтрок);
		
		Если Реквизит.Имя = "ОтветственныеЛица" Тогда
			ОтборВодителей = Новый Структура("Роль", "Водитель");
			МассивСтрок = МодульКода("Saby_ТНОбщегоНазначенияСервер").ТаблицаЗначенийВМассивЭПД(
				ЭтаФорма[Реквизит.Имя].Выгрузить(ОтборВодителей));
			СтруктураДокумента.Вставить("Водители", МассивСтрок);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ЭтаФорма.Идентификатор) Тогда 
		ЭтаФорма.Идентификатор = "45ebb680-872a-4541-9b0a-95292e861d15";
	КонецЕсли;
	
	СтруктураДокумента.Вставить("ИмяМетаданных", "Saby_ТранспортнаяНакладная");
	СтруктураДокумента.Вставить("Идентификатор", ЭтаФорма.Идентификатор);
	СтруктураДокумента.Вставить("Комментарий",   "");
	СтруктураДокумента.Вставить("ДатаИзменения", "");
	СтруктураДокумента.Вставить("Валюта",        "");
	
	СтруктураДокумента.Вставить("Отгрузка_ОтветственныйСтрокой", СтруктураДокумента.ОтветственныйОтгрузка);
	СтруктураДокумента.Вставить("СоставительСтрокой",            СтруктураДокумента.ОформительСтрокой);
	
	СтруктураДокумента.Вставить("СопроводительныеДокументы", Новый Массив);
	
	ЭтаФорма.Ссылка = СтруктураДокумента;
	
	Если ЭтаФорма.ДвоичныеДанныеОбработки = Неопределено Тогда
		
		ОбъектОбработки = РеквизитФормыВЗначение("Объект");
		ЭтаФорма.ДвоичныеДанныеОбработки = ОбъектОбработки.ИспользуемоеИмяФайла;
				
	КонецЕсли;
		
	ЭтаФорма.ЭтоВО = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторПриИзменении(Элемент)

	ЭтаФорма.Ссылка.Идентификатор = ЭтаФорма.Идентификатор;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСопроводительныхДокументов()
	
	Для Каждого СтрокаДокументаЭПД Из ЭтаФорма.ДокументыЭПД Цикл
		СтрокаДокументаЭПД.ЭтоСопроводительныйДокумент = СтрокаДокументаЭПД.Тип = "КГрузу"
			Или СтрокаДокументаЭПД.Тип = "ПередачиЦенностей"
			Или СтрокаДокументаЭПД.Тип = "КТранспортнойНакладной";
	КонецЦикла;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ЭтоСопроводительныйДокумент", Истина);
	
	ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	
	Элементы.СопроводительныеДокументы.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьУсловноеОформление()
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.СопроводительныеДокументыТип);
	МассивЭлементов.Добавить(Элементы.АктыТип);
	МассивЭлементов.Добавить(Элементы.Акты_ВыгрузкаТип);
	МассивЭлементов.Добавить(Элементы.ОтправительКонтактныеДанныеТип);
	МассивЭлементов.Добавить(Элементы.ПолучательКонтактныеДанныеТип);
	МассивЭлементов.Добавить(Элементы.ПеревозчикКонтактныеДанныеТип);
	МассивЭлементов.Добавить(Элементы.ВладелецОбъектаКонтактныеДанныеТип);
	МассивЭлементов.Добавить(Элементы.ОтгрузчикКонтактныеДанныеТип);
	
	Для Каждого Элемент Из МассивЭлементов Цикл
		Для Каждого ЭлементСпискаВыбора Из Элемент.СписокВыбора Цикл
			ЭлементУсловногоОформления = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ЭлементСпискаВыбора.Представление);
			Условие = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Условие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элемент.ПутьКДанным);
			Условие.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			Условие.ПравоеЗначение = ЭлементСпискаВыбора.Значение;
			Поле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			Поле.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#Область include_etrn_src_vo3_CommonModule_ВыполнениеФункцииНаСервере //&НаСервере
#КонецОбласти // include_etrn_src_vo3_CommonModule_ВыполнениеФункцииНаСервере //&НаСервере

#Область include_etrn_src_vo3_CommonModule_ОпределениеМодуляКода
#КонецОбласти // include_etrn_src_vo3_CommonModule_ОпределениеМодуляКода

#Область include_etrn_src_vo3_CommonModule_ОпределениеМодуляКодаКлиент
#КонецОбласти // include_etrn_src_vo3_CommonModule_ОпределениеМодуляКодаКлиент

#Область include_etrn_src_vo3_CommonModule_ЗначениеМетаданных
#КонецОбласти // include_etrn_src_vo3_CommonModule_ЗначениеМетаданных

#Область include_etrn_base_CommonModule_ТНОбщегоНазначенияКлиент_CommonModule
#КонецОбласти // include_etrn_base_CommonModule_ТНОбщегоНазначенияКлиент_CommonModule

#Область include_etrn_base_CommonModule_ТНОбщегоНазначенияКлиентСервер_CommonModule //&НаКлиенте
#КонецОбласти // include_etrn_base_CommonModule_ТНОбщегоНазначенияКлиентСервер_CommonModule //&НаКлиенте

#Область include_etrn_base_CommonModule_ТНОбщегоНазначенияСервер_CommonModule
#КонецОбласти // include_etrn_base_CommonModule_ТНОбщегоНазначенияСервер_CommonModule

#Область include_etrn_base_Document_ТранспортнаяНакладная_РеквизитыТитулов
#КонецОбласти // include_etrn_base_Document_ТранспортнаяНакладная_РеквизитыТитулов

#Область include_etrn_src_vo3_CommonModule_КартинкаИнтерфейса
#КонецОбласти // include_etrn_src_vo3_CommonModule_КартинкаИнтерфейса

#Область include_etrn_src_vo3_CommonModule_ДокументыЭПД
#КонецОбласти // include_etrn_src_vo3_CommonModule_ДокументыЭПД

