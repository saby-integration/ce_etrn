
#Область ОбработчикиСобытийФормы
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТолькоПросмотр") 
		И Параметры.ТолькоПросмотр = Истина Тогда
		
		Элементы.ФормаЗаписатьИЗакрыть.Видимость  = Ложь;		
		Элементы.Группа_Содержимое.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
	МодульКода("Saby_ТНОбщегоНазначенияСервер").ЗаполнитьРеквизитыФормы(ЭтаФорма, Параметры);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьНовыеДанные(Команда)
	
	ЕстьОшибки = ПроверкаЗаполнения();
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;	
	
	ОпасныйГруз = ДанныеОпасногоГруза();
	ОпасныйГруз.Вставить("ОпасныйГруз", ЭтаФорма.Наименование);				
					
	ЭтаФорма.Закрыть(ОпасныйГруз);

КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ДанныеОпасногоГруза()

	Исключения = Новый Массив;
	Исключения.Добавить("Объект");
	
	Структура = МодульКода("Saby_ТНОбщегоНазначенияСервер").РеквизитыФормыВСтруктуру(
					ЭтаФорма, Исключения);

	Возврат Структура;				
					
КонецФункции

&НаКлиенте
Функция ПроверкаЗаполнения()
	
	ЕстьОшибки = Ложь;
	
	ПроверяемыеРеквизиты = Новый Массив;
	
	ПроверяемыеРеквизиты.Добавить("Наименование");
	ПроверяемыеРеквизиты.Добавить("НомерООН");
	ПроверяемыеРеквизиты.Добавить("Класс");
	ПроверяемыеРеквизиты.Добавить("КлассификационныйКод");
	ПроверяемыеРеквизиты.Добавить("ГруппаУпаковкиЗначение");
	ПроверяемыеРеквизиты.Добавить("ЗнакОпасности");
	ПроверяемыеРеквизиты.Добавить("ОграничениеПроездаЧерезТуннели");
	
	Для Каждого РеквизитПроверки Из ПроверяемыеРеквизиты Цикл
		
		РеквизитФормы = ЭтаФорма[РеквизитПроверки];
		
		Значение = СокрЛП(РеквизитФормы);
		Если Не ЗначениеЗаполнено(Значение) Тогда 
				
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Поле        = РеквизитПроверки;
			Сообщение.ПутьКДанным = РеквизитФормы;
			Сообщение.Текст       = "Не заполнено поле """ + Элементы[РеквизитПроверки].Заголовок + """";
			
			Сообщение.Сообщить();
			
			ЕстьОшибки = Истина;
			
		КонецЕсли;
					
	КонецЦикла;
	
	Возврат ЕстьОшибки;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#Область include_etrn_src_vo3_CommonModule_ОпределениеМодуляКода
#КонецОбласти // include_etrn_src_vo3_CommonModule_ОпределениеМодуляКода

#Область include_etrn_src_vo3_CommonModule_ОпределениеМодуляКодаКлиент
#КонецОбласти // include_etrn_src_vo3_CommonModule_ОпределениеМодуляКодаКлиент
