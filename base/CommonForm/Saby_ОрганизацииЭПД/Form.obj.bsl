
#Область ОбработчикиСобытийФормы
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.РольСтрокой = Параметры.РольСтрокой;
	
	Если Параметры.Свойство("ТолькоПросмотр") Тогда
		ЭтаФорма.ТолькоПросмотрФормы = Параметры.ТолькоПросмотр;
	КонецЕсли;
	
	Если Параметры.Свойство("Наименование") Тогда
		ЭтаФорма.Заголовок = Параметры.Наименование;
	КонецЕсли;
	
	УстановитьТипыРеквизитов();
	
	ЗаполнениеРеквизитовФормы(Параметры, Истина);
	
	ОбновитьВидимостьИДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПоСсылке(Команда)
	
	ОбновитьДанныеПоСсылке();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовыеДанные(Команда)
	
	Если ЭтаФорма.ЭтоИП Тогда
		
		ФИО = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер").ПредставлениеФИО(ЭтаФорма);
		ЭтаФорма.НаименованиеОрганизации = "ИП " + ФИО;
		
		СтруктураФИО = ФИОСтрокой(ЭтаФорма.Фамилия, ЭтаФорма.Имя, ЭтаФорма.Отчество);
		
	Иначе
		СтруктураФИО = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтаФорма.РольСтрокой) Тогда
		Роль = ЗначениеМетаданных("Saby_РолиКонтрагентов." + ЭтаФорма.РольСтрокой);
	Иначе
		Роль = ЗначениеМетаданных("Saby_РолиКонтрагентов.ПустаяСсылка");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтаФорма.ЮрФизЛицоСтрокой) Тогда
		ЮрФизЛицо = ЗначениеМетаданных("Saby_ЮрФизЛицо." + ЭтаФорма.ЮрФизЛицоСтрокой);
	Иначе
		ЮрФизЛицо = ЗначениеМетаданных("Saby_ЮрФизЛицо.ПустаяСсылка");
	КонецЕсли;
	
	Структура = Новый Структура;
	Структура.Вставить("Роль",                    Роль);
	Структура.Вставить("РольСтрокой",             ЭтаФорма.РольСтрокой);
	Структура.Вставить("ИНН",                     ЭтаФорма.ИНН);
	Структура.Вставить("КПП",                     ЭтаФорма.КПП);
	Структура.Вставить("ОГРН",                    ЭтаФорма.ОГРН);
	Структура.Вставить("ЮрФизЛицо",               ЮрФизЛицо);
	Структура.Вставить("ЮрФизЛицоСтрокой",        ЭтаФорма.ЮрФизЛицоСтрокой);
	Структура.Вставить("СтруктураФИО",            СтруктураФИО);
	Структура.Вставить("Адрес",                   ЭтаФорма.Адрес);
	Структура.Вставить("АдресСтруктура",          ЭтаФорма.АдресСтруктура);
	Структура.Вставить("СтранаРегистрации",       ЭтаФорма.СтранаРегистрации);
	Структура.Вставить("КодФилиала",              ЭтаФорма.КодФилиала);
	Структура.Вставить("Полномочия",              ЭтаФорма.Полномочия);
	Структура.Вставить("Основание",               ЭтаФорма.Основание);
	Структура.Вставить("НаименованиеОрганизации", ЭтаФорма.НаименованиеОрганизации);
	Структура.Вставить("ЭлементФормы",            ЭтаФорма.ЭлементФормы);
	Структура.Вставить("КонтактныеДанные",        МассивКонтактныхДанных(ЭтаФорма.КонтактныеДанные));
	Структура.Вставить("ДокументыЭПД",            МассивДокументовЭПД(ЭтаФорма.ДокументыЭПД));
	
	Структура.Вставить("Удалить",                 УдалитьЗапись());
	
	ЭтаФорма.Закрыть(Структура);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсеПоля(Команда)
	
	ОчиститьРеквизитыФормы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтрагентОрганизацияПриИзменении(Элемент)
	ОбновитьДанныеПоСсылке();
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиНажатие(Элемент)
	ИзменитьАдрес(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура АдресНажатие(Элемент, СтандартнаяОбработка)
	ИзменитьАдрес(СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтактныеДанные

&НаКлиенте
Процедура КонтактныеДанныеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиент").ЗначениеКонтактныхДанныхНачалоВыбора(
		ЭтаФорма, Элементы.КонтактныеДанные.ТекущиеДанные, ЭтаФорма.РольСтрокой, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеДанныеЗначениеПриИзменении(Элемент)
	
	МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиент").ЗначениеКонтактныхДанныхПриИзменении(
		ЭтаФорма, Элементы.КонтактныеДанные.ТекущиеДанные, ЭтаФорма.РольСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеДанныеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если Копирование Тогда
			Элементы.КонтактныеДанные.ТекущиеДанные.Основной = Ложь;
		КонецЕсли;
		ОбработатьНовуюСтрокуКонтактнойИнформации(Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыКонтактныеДанные

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОчиститьРеквизитыФормы()
	
	РеквизитыИсключения = Новый Массив;
	//РеквизитыИсключения.Добавить("Роль");
	РеквизитыИсключения.Добавить("РольСтрокой");
	РеквизитыИсключения.Добавить("ЭлементФормы");
	РеквизитыИсключения.Добавить("Объект");
	
	МодульКода("Saby_ТНОбщегоНазначенияСервер").ОчиститьРеквизитыФормы(ЭтаФорма, РеквизитыИсключения);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьИДоступностьЭлементов()
	
	УстановитьДоступНаЭлементы();
	
	МассивСкрыть   = Новый Массив;
	МассивПоказать = Новый Массив;
	
	// ЭтаФорма.ЭтоИП = (ЭтаФорма.ЮрФизЛицо = Перечисления.Saby_ЮрФизЛицо.ИндивидуальныйПредприниматель);
	
	ЭтаФорма.ЭтоИП = (ЭтаФорма.ЮрФизЛицоСтрокой = "ИндивидуальныйПредприниматель");
	
	Если ЭтаФорма.ЭтоИП Тогда
		
		МассивСкрыть.Добавить("НаименованиеОрганизации");
		МассивСкрыть.Добавить("КодФилиала");
		МассивСкрыть.Добавить("КПП");
		
		МассивПоказать.Добавить("ГруппаФИО");
		
	Иначе
		
		МассивСкрыть.Добавить("ГруппаФИО");
		
		МассивПоказать.Добавить("НаименованиеОрганизации");
		МассивПоказать.Добавить("КодФилиала");
		МассивПоказать.Добавить("КПП");
		
	КонецЕсли;
	
	МассивСкрыть.Добавить("СтранаРегистрации");
	
	Если ЗначениеЗаполнено(ЭтаФорма.Адрес) Тогда
		МассивСкрыть.Добавить("ДекорацияЗаполнитьАдресДоставки");
	Иначе
		МассивПоказать.Добавить("ДекорацияЗаполнитьАдресДоставки");
	КонецЕсли;
	
	ОбновитьВидимостьДоступностьПоРолям(МассивПоказать, МассивСкрыть);
	
	МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "Видимость", Ложь, МассивСкрыть);
	
	МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "Видимость", Истина, МассивПоказать);
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьВидимостьДоступностьПоРолям(МассивПоказать, МассивСкрыть)
	
	ЭтоПутевойЛист = (ЭтаФорма.ТипДокументаИсточника = "Saby_ПутевойЛист");
	
	Если (ЭтоПутевойЛист
		И ЭтаФорма.РольСтрокой <> "Оформитель")
		Или ЭтаФорма.РольСтрокой = "СторонаДокумента" Тогда
		
		МассивСкрыть.Добавить("ГруппаКонтакты");
	КонецЕсли;
	
	Если ЭтаФорма.РольСтрокой = "УполномоченноеЛицо"
		Или ЭтаФорма.РольСтрокой = "УполномоченноеЛицоПеревозчика" Тогда
		
		МассивПоказать.Добавить("ГруппаПолномочия");
		
		Если ЭтаФорма.РольСтрокой = "УполномоченноеЛицоПеревозчика" Тогда
			Элементы.Полномочия.Доступность = Ложь;
		КонецЕсли;
		
	Иначе
		МассивСкрыть.Добавить("ГруппаПолномочия");
	КонецЕсли;
	
	Если ЭтаФорма.РольСтрокой = "Оформитель"
		И Не ЭтоПутевойЛист Тогда
		МассивПоказать.Добавить("ГруппаОснованиеОформителя");
	Иначе
		МассивСкрыть.Добавить("ГруппаОснованиеОформителя");
	КонецЕсли;
	
	Если ЭтаФорма.РольСтрокой = "МедосмотрВыезд" Или ЭтаФорма.РольСтрокой = "МедосмотрЗаезд" Тогда
		МассивСкрыть.Добавить("ГруппаАдрес");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступНаЭлементы()
	
	МассивТолькоПросмотр = Новый Массив;
	МассивТолькоПросмотр.Добавить("ФормаЗаписатьИЗакрыть");
	МассивТолькоПросмотр.Добавить("ФормаОчиститьВсеПоля");
	
	МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "Доступность", Не ЭтаФорма.ТолькоПросмотрФормы, МассивТолькоПросмотр);
	
	МассивТолькоПросмотр.Очистить();
	// МассивТолькоПросмотр.Добавить("ЮрФизЛицо");
	
	МассивТолькоПросмотр.Добавить("ЮрФизЛицоСтрокой");
	МассивТолькоПросмотр.Добавить("НаименованиеОрганизации");
	МассивТолькоПросмотр.Добавить("ГруппаФИО");
	МассивТолькоПросмотр.Добавить("ГруппаИННКПП");
	МассивТолькоПросмотр.Добавить("КодФилиала");
	МассивТолькоПросмотр.Добавить("СтранаРегистрации");
	МассивТолькоПросмотр.Добавить("ГруппаАдрес");
	МассивТолькоПросмотр.Добавить("ГруппаКонтакты");
	МассивТолькоПросмотр.Добавить("ГруппаПолномочия");
	МассивТолькоПросмотр.Добавить("ГруппаОснованиеОформителя");
	
	МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "ТолькоПросмотр", ЭтаФорма.ТолькоПросмотрФормы, МассивТолькоПросмотр);
		
	Элементы.ГруппаЗаполнениеДанных.Видимость            = Не ЭтаФорма.ТолькоПросмотрФормы;
	Элементы.ДекорацияЗаполнитьАдресДоставки.Доступность = Не ЭтаФорма.ТолькоПросмотрФормы;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеРеквизитовФормы(Знач ДанныеЗаполнения, Знач ВызовПриСозданииНаСервере = Ложь)
	
	МодульКода("Saby_ТНОбщегоНазначенияСервер").ЗаполнитьРеквизитыФормы(ЭтаФорма, ДанныеЗаполнения);
	
	Если ДанныеЗаполнения.Свойство("ЮрФизЛицоСтрокой")
		И ЗначениеЗаполнено(ДанныеЗаполнения.ЮрФизЛицоСтрокой) Тогда
		ЭтаФорма.ЮрФизЛицоСтрокой = ДанныеЗаполнения.ЮрФизЛицоСтрокой;
	Иначе
		ЭтаФорма.ЮрФизЛицоСтрокой = "ЮрЛицо";
	КонецЕсли;
	
	ЭтаФорма.ЭтоИП = (ЭтаФорма.ЮрФизЛицоСтрокой = "ИндивидуальныйПредприниматель");
	Если ЭтоИП И ДанныеЗаполнения.Свойство("СтруктураФИО") Тогда
		Если ЗначениеЗаполнено(ДанныеЗаполнения.СтруктураФИО) Тогда
			СтруктураФИО = ЗначениеИзСтрокиВнутр(ДанныеЗаполнения.СтруктураФИО);
			ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураФИО);
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ЭлементФормы") Тогда
		ЭтаФорма.ЭлементФормы = ДанныеЗаполнения.ЭлементФормы;
	КонецЕсли;
	
	Если ЭтаФорма.РольСтрокой = "УполномоченноеЛицоПеревозчика" Тогда
		ЭтаФорма.Полномочия = 1;
	КонецЕсли;
	
	МожемПопробоватьЗаполнитьСсылку = Не ЭтаФорма.ТолькоПросмотрФормы
		И ВызовПриСозданииНаСервере
		И (ЗначениеЗаполнено(ЭтаФорма.ИНН)
			ИЛИ ЗначениеЗаполнено(ЭтаФорма.КПП)
			Или ЗначениеЗаполнено(ЭтаФорма.НаименованиеОрганизации));
		
	Если МожемПопробоватьЗаполнитьСсылку Тогда
		ЭтаФорма.КонтрагентОрганизация = МодульКода("Saby_ТНОбщегоНазначенияСервер").ОрганизацияКонтрагент(
			ЭтаФорма.ИНН, ЭтаФорма.КПП, ЭтаФорма.НаименованиеОрганизации).Ссылка;
	КонецЕсли;
	
КонецПроцедуры

#Область Телефоны

&НаКлиенте
Процедура ТелефоныТелефонПриИзменении(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭтаФорма.ТекущийЭлемент = Элементы.Телефоны;
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныПослеУдаления(Элемент)
КонецПроцедуры

#КонецОбласти // Телефоны

&НаКлиенте
Процедура ОбработкаВыбораВодителя(ВыбранныйЭлемент, ДопПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ЭтаФорма.Водитель = ВыбранныйЭлемент;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаПриИзменении(Элемент)
	
	ОбновитьДанныеПоСсылке();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеПоСсылке()
	
	Если ЗначениеЗаполнено(ЭтаФорма.КонтрагентОрганизация) Тогда
		Результат = ОбновитьДанныеЮрЛицНаСервере();
		Если Результат.Ошибка Тогда
			
			ПоказатьОповещениеПользователя(
				"Ошибка",
				,
				Результат.ТекстСообщения,
				Результат.Картинка);
				
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	
	ОбновитьВидимостьИДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьИДоступностьЭлементовНаКлиенте() Экспорт
	ОбновитьВидимостьИДоступностьЭлементов();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФИОСтрокой(Знач Фамилия, Знач Имя, Знач Отчество)
	
	СтруктураФИО = Новый Структура;
	СтруктураФИО.Вставить("Фамилия",  Фамилия);
	СтруктураФИО.Вставить("Имя",      Имя);
	СтруктураФИО.Вставить("Отчество", Отчество);
	
	Возврат ЗначениеВСтрокуВнутр(СтруктураФИО);
	
КонецФункции

&НаСервере
Функция ОбновитьДанныеЮрЛицНаСервере()
	
	// зачистка данных перед обновлением
	ЭтаФорма.ДанныеЮрЛиц.Очистить();
	ЭтаФорма.КонтактныеДанные.Очистить();
	
	Результат = ЗаполнитьДанныеЮрЛицНаОснованииINI();
	
	Если ЭтаФорма.ДанныеЮрЛиц.Количество() Тогда
		
		Строка    = ЭтаФорма.ДанныеЮрЛиц[0];
		Структура = МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ШаблонДанныхЮрЛица();
		Структура.Удалить("КонтактныеДанные");
		
		Строка.РольСтрокой = ЭтаФорма.РольСтрокой;
		ЗаполнитьЗначенияСвойств(Структура, Строка);
		ЗаполнениеРеквизитовФормы(Структура);
		
		Структура.Заполнена = Истина;
		
	Иначе
		ОчиститьРеквизитыФормы();
	КонецЕсли;
	
	Для Каждого СтруктураКонтактныхДанных Из ЭтаФорма.КонтактныеДанные Цикл
		СтруктураКонтактныхДанных.РольСтрокой            = ЭтаФорма.РольСтрокой;
		СтруктураКонтактныхДанных.КлючСтроки_ДанныеЮрЛиц = ЭтаФорма.КлючСтроки;
	КонецЦикла;
	
	ОбновитьВидимостьИДоступностьЭлементов();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция МассивКонтактныхДанных(ТаблицаКонтактныхДанных)
	
	РезультатФункции = Новый Массив;
	
	Для Каждого СтрокаКонтактныхДанных Из ТаблицаКонтактныхДанных Цикл
		
		СтруктураКонтактныхДанных = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер").СтруктураКонтактныхДанных();
		ЗаполнитьЗначенияСвойств(СтруктураКонтактныхДанных, СтрокаКонтактныхДанных);
		
		РезультатФункции.Добавить(СтруктураКонтактныхДанных);
		
	КонецЦикла;
	
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Функция МассивДокументовЭПД(ТаблицаДокументовЭПД)
	
	РезультатФункции = Новый Массив;
	
	Если Не ЗначениеЗаполнено(ЭтаФорма.Основание)
		И ТаблицаДокументовЭПД.Количество() Тогда
		
		Для Каждого СтрокаДокументов Из ТаблицаДокументовЭПД Цикл
			
			СтруктураДанных = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер").СтруктураДокументаЭПД();
			ЗаполнитьЗначенияСвойств(СтруктураДанных, СтрокаДокументов);
			
			РезультатФункции.Добавить(СтруктураДанных);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьНовуюСтрокуКонтактнойИнформации(ИмяТЧ)
	
	Отбор = Новый Структура;
	Отбор.Вставить("РольСтрокой", "");
	
	НайденныеСтроки = КонтактныеДанные.НайтиСтроки(Отбор);
	Для Каждого Строка Из НайденныеСтроки Цикл
		Строка.РольСтрокой            = ЭтаФорма.РольСтрокой;
		Строка.КлючСтроки_ДанныеЮрЛиц = ЭтаФорма.КлючСтроки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция УдалитьЗапись()
	
	Если ЭтаФорма.ЭтоИП Тогда
		Возврат Не ЗначениеЗаполнено(ЭтаФорма.Фамилия)
			И Не ЗначениеЗаполнено(ЭтаФорма.Имя)
			И Не ЗначениеЗаполнено(ЭтаФорма.Отчество)
			И Не ЗначениеЗаполнено(ЭтаФорма.ИНН);
	Иначе
		Возврат Не ЗначениеЗаполнено(ЭтаФорма.ИНН)
			И Не ЗначениеЗаполнено(ЭтаФорма.КПП)
			И Не ЗначениеЗаполнено(ЭтаФорма.НаименованиеОрганизации);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьАдрес(СтандартнаяОбработка)
	
	ПараметрыВыбораАдреса = Новый Структура;
	ПараметрыВыбораАдреса.Вставить("РольСтрокой",    ЭтаФорма.РольСтрокой);
	ПараметрыВыбораАдреса.Вставить("Значение",       ЭтаФорма.АдресСтруктура);
	ПараметрыВыбораАдреса.Вставить("Текст",          ЭтаФорма.Адрес);
	ПараметрыВыбораАдреса.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотрФормы);
	
	МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиент").АдресНачалоВыбора(ЭтаФорма, ПараметрыВыбораАдреса, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипыРеквизитов()
	
	МодульТНОбщегоНазначенияСервер = МодульКода("Saby_ТНОбщегоНазначенияСервер");
	
	// Контрагенты и организации
    МассивПроверяемыхТипов = Новый Массив;
	МассивПроверяемыхТипов.Добавить("Справочники.Контрагенты");
	МассивПроверяемыхТипов.Добавить("Справочники.Организации");
	
	МодульТНОбщегоНазначенияСервер.УстановитьОграниченияТипов(Элементы.КонтрагентОрганизация, МассивПроверяемыхТипов);
	
	// Основание
	МассивПроверяемыхТипов.Очистить();
	МассивПроверяемыхТипов.Добавить("Справочники.Saby_ДокументыЭПД");
	
	МодульТНОбщегоНазначенияСервер.УстановитьОграниченияТипов(Элементы.Основание, МассивПроверяемыхТипов);
	МодульТНОбщегоНазначенияСервер.УстановитьОграниченияТипов(Элементы.ОснованиеОформителя, МассивПроверяемыхТипов);
	
	Элементы.КонтактныеДанныеТип.СписокВыбора.Очистить();
	Элементы.КонтактныеДанныеТип.СписокВыбора.Добавить(
		ЗначениеМетаданных("ТипыКонтактнойИнформации.Телефон"), "Телефон");
	Элементы.КонтактныеДанныеТип.СписокВыбора.Добавить(
		ЗначениеМетаданных("ТипыКонтактнойИнформации.АдресЭлектроннойПочты"), "Адрес электронной почты");
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДанныеЮрЛицНаОснованииINI()
	
	context_params = МодульКода("Saby_Core").ПроверитьНаличиеПараметровПодключения();
	
	// Учесть в дальнейшем почему данные для Контрагентов и Организаций не едины по всем документам
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ini_name",         "Blockly_ДанныеКонтрагентаОрганизации_ЭТрН_read");
	ПараметрыРасчета.Вставить("Основание",        ЭтаФорма.КонтрагентОрганизация);	
	ПараметрыРасчета.Вставить("context_params",   context_params);
	ПараметрыРасчета.Вставить("РольКонтрагента",  "");
	ПараметрыРасчета.Вставить("ЗапретЗаполнения", Новый Соответствие);

	Если Метаданные.Обработки.Найти("SABY") = Неопределено Тогда
		ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	Иначе 
		ОбъектОбработки = Обработки.SABY.Создать();
	КонецЕсли;	
	
	ПараметрыРасчета.Вставить("ТранспортБлокли", ОбъектОбработки);
		
	Если ПараметрыРасчета.context_params.ExtSysSettingsId = "УАТ2" Тогда
		ПараметрыРасчета.ini_name = "Blockly_ДанныеКонтрагентаОрганизации_ЭПЛ_read";
	КонецЕсли;
	
	РезультатРасчета = МодульКода("Saby_ТНОбщегоНазначенияСервер").РезультатРасчетаINI(ПараметрыРасчета);
	Если РезультатРасчета.Результат.Ошибка Тогда
		
		РезультатРасчета.Результат.Вставить("Картинка", КартинкаИнтерфейса(ЭтаФорма, "Saby_Ошибка32"));
		
	Иначе
		
		ДанныеИНИ = РезультатРасчета.ДанныеИзИНИ;
		
		ДляДокумента = Новый Структура;
		ДляДокумента.Вставить("ДанныеЮрЛиц",      Новый Массив);
		ДляДокумента.Вставить("КонтактныеДанные", Новый Массив);
						
		МодульКода("Saby_ТНЗагрузкаСервер").ЗагрузитьДанныеЮрЛиц(ДляДокумента, ДанныеИНИ, ЭтаФорма.РольСтрокой);
		
		Для Каждого ЭлементЮрЛиц Из ДляДокумента.ДанныеЮрЛиц Цикл
			НС = ЭтаФорма.ДанныеЮрЛиц.Добавить();
			ЗаполнитьЗначенияСвойств(НС, ЭлементЮрЛиц);
		КонецЦикла;
		
		Для Каждого ЭлементКИ Из ДляДокумента.КонтактныеДанные Цикл
			НС = ЭтаФорма.КонтактныеДанные.Добавить();
			ЗаполнитьЗначенияСвойств(НС, ЭлементКИ);
			
			// правка косяка с текущими типами перечисления
			Если НС.Тип = "Адрес электронной почты" Тогда
				НС.Тип = "АдресЭлектроннойПочты";
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат РезультатРасчета.Результат;
	
КонецФункции

#Область include_etrn_base_CommonForm_ОрганизацииЭПД_СлужебныеПроцедурыИФункции
#КонецОбласти // include_etrn_base_CommonForm_ОрганизацииЭПД_СлужебныеПроцедурыИФункции

#КонецОбласти
