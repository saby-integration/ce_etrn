
#Область ОбработчикиСобытийФормы
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Роль        = Параметры.Роль;
	ЭтаФорма.РольСтрокой = Параметры.РольСтрокой;
	
	Если Параметры.Свойство("ТолькоПросмотр") Тогда
		ЭтаФорма.ТолькоПросмотрФормы = Параметры.ТолькоПросмотр;
	КонецЕсли;
		
	Если Параметры.Свойство("Наименование") Тогда
		ЭтаФорма.Заголовок = Параметры.Наименование;
	КонецЕсли;
	
	ЗаполнениеРеквизитовФормы(Параметры);	
		    		
	ОбновитьВидимостьИДоступностьЭлементов();
	
	УстановкаСпискаДоступныхТиповКИ();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПоСсылке(Команда)
	
	ОбновитьДанныеПоСсылке();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовыеДанные(Команда)
	
	Если ЭтаФорма.ЭтоИП Тогда 
		
        ФИО = Saby_ТНОбщегоНазначенияКлиентСервер.ПредставлениеФИО(ЭтаФорма);		
		ЭтаФорма.НаименованиеОрганизации = "ИП " + ФИО;
		
		СтруктураФИО = ФИОСтрокой(ЭтаФорма.Фамилия, ЭтаФорма.Имя, ЭтаФорма.Отчество);
				
	Иначе 			
		СтруктураФИО = "";		
	КонецЕсли;
		
	Структура = Новый Структура;
	Структура.Вставить("Роль",                    ЭтаФорма.Роль);
	Структура.Вставить("РольСтрокой",             ЭтаФорма.РольСтрокой);
	Структура.Вставить("ИНН",                     ЭтаФорма.ИНН);
	Структура.Вставить("КПП",                     ЭтаФорма.КПП);
	Структура.Вставить("ОГРН",                    ЭтаФорма.ОГРН);
	Структура.Вставить("ЮрФизЛицо",               ЭтаФорма.ЮрФизЛицо);
	Структура.Вставить("СтруктураФИО",            СтруктураФИО);
	Структура.Вставить("Адрес",                   ЭтаФорма.Адрес);
	Структура.Вставить("АдресСтруктура",          ЭтаФорма.АдресСтруктура);
	Структура.Вставить("СтранаРегистрации",       ЭтаФорма.СтранаРегистрации);
	Структура.Вставить("КодФилиала",              ЭтаФорма.КодФилиала);
	Структура.Вставить("Полномочия",              ЭтаФорма.Полномочия);
	Структура.Вставить("Основание",               ЭтаФорма.Основание);
	Структура.Вставить("НаименованиеОрганизации", ЭтаФорма.НаименованиеОрганизации);
	Структура.Вставить("ЭлементФормы",            ЭтаФорма.ЭлементФормы);
	Структура.Вставить("КонтактныеДанные",        МассивКонтактныхДанных(ЭтаФорма.КонтактныеДанные));
	
	Структура.Вставить("Удалить",                 УдалитьЗапись());
	
	ЭтаФорма.Закрыть(Структура);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсеПоля(Команда)
	
	ОчиститьРеквизитыФормы();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтрагентОрганизацияПриИзменении(Элемент)
	ОбновитьДанныеПоСсылке();	
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиНажатие(Элемент)	
	ИзменитьАдрес(Ложь);	
КонецПроцедуры

&НаКлиенте
Процедура АдресНажатие(Элемент, СтандартнаяОбработка)
	ИзменитьАдрес(СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтактныеДанные

&НаКлиенте
Процедура КонтактныеДанныеЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Saby_ТНОбщегоНазначенияКлиент.ЗначениеКонтактныхДанныхНачалоВыбора(
		ЭтаФорма, Элементы.КонтактныеДанные.ТекущиеДанные, ЭтаФорма.РольСтрокой, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеДанныеЗначениеПриИзменении(Элемент)
	
	Saby_ТНОбщегоНазначенияКлиент.ЗначениеКонтактныхДанныхПриИзменении(
		ЭтаФорма, Элементы.КонтактныеДанные.ТекущиеДанные, ЭтаФорма.РольСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеДанныеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если Копирование Тогда
			Элементы.КонтактныеДанные.ТекущиеДанные.Основной = Ложь;
		КонецЕсли;
		ОбработатьНовуюСтрокуКонтактнойИнформации(Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыКонтактныеДанные

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОчиститьРеквизитыФормы()
	
	РеквизитыИсключения = Новый Массив;
	РеквизитыИсключения.Добавить("Роль");
	РеквизитыИсключения.Добавить("РольСтрокой");
	РеквизитыИсключения.Добавить("ЭлементФормы");

	Saby_ТНОбщегоНазначенияСервер.ОчиститьРеквизитыФормы(ЭтаФорма, РеквизитыИсключения);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьИДоступностьЭлементов()
	
	УстановитьДоступНаЭлементы();
	
	МассивСкрыть   = Новый Массив;
	МассивПоказать = Новый Массив;
	
	ЭтаФорма.ЭтоИП = (ЭтаФорма.ЮрФизЛицо = Перечисления.Saby_ЮрФизЛицо.ИндивидуальныйПредприниматель);
	
	Если ЭтаФорма.ЭтоИП Тогда
		
		МассивСкрыть.Добавить("НаименованиеОрганизации");
		МассивСкрыть.Добавить("КодФилиала");
		МассивСкрыть.Добавить("КПП");
		
		МассивПоказать.Добавить("ГруппаФИО");
		
	Иначе
		
		МассивСкрыть.Добавить("ГруппаФИО");
		
		МассивПоказать.Добавить("НаименованиеОрганизации");
		МассивПоказать.Добавить("КодФилиала");
		МассивПоказать.Добавить("КПП");
		
	КонецЕсли;
	
	МассивСкрыть.Добавить("СтранаРегистрации");
	
	Если ЗначениеЗаполнено(ЭтаФорма.Адрес) Тогда
		МассивСкрыть.Добавить("ДекорацияЗаполнитьАдресДоставки");
	Иначе
		МассивПоказать.Добавить("ДекорацияЗаполнитьАдресДоставки");
	КонецЕсли;
	
	Если ТипЗнч(ЭтаФорма.ТипДокументаИсточника) = Тип("ДокументСсылка.Saby_ПутевойЛист")
		И ЭтаФорма.Роль <> Перечисления.Saby_РолиКонтрагентов.Оформитель Тогда
		МассивСкрыть.Добавить("ГруппаКонтакты");
	КонецЕсли;
	
	Если ЭтаФорма.Роль = Перечисления.Saby_РолиКонтрагентов.УполномоченноеЛицо
		Или ЭтаФорма.Роль = Перечисления.Saby_РолиКонтрагентов.УполномоченноеЛицоПеревозчика Тогда
		
		МассивПоказать.Добавить("ГруппаПолномочия");
		
		Если ЭтаФорма.Роль = Перечисления.Saby_РолиКонтрагентов.УполномоченноеЛицоПеревозчика Тогда
			Элементы.Полномочия.Доступность = Ложь;
		КонецЕсли;
				
	Иначе
		МассивСкрыть.Добавить("ГруппаПолномочия");
	КонецЕсли;
	
	Если ЭтаФорма.Роль = Перечисления.Saby_РолиКонтрагентов.Оформитель Тогда
		МассивПоказать.Добавить("ГруппаОснованиеОформителя");
	Иначе
		МассивСкрыть.Добавить("ГруппаОснованиеОформителя");
	КонецЕсли;
	
	Saby_ТНОбщегоНазначенияКлиентСервер.ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "Видимость", Ложь, МассивСкрыть);
		
	Saby_ТНОбщегоНазначенияКлиентСервер.ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "Видимость", Истина, МассивПоказать);
				
КонецПроцедуры	

Процедура УстановитьДоступНаЭлементы()
	
	МассивТолькоПросмотр = Новый Массив;
	МассивТолькоПросмотр.Добавить("ФормаЗаписатьИЗакрыть");
	МассивТолькоПросмотр.Добавить("ФормаОчиститьВсеПоля");
	
	Saby_ТНОбщегоНазначенияКлиентСервер.ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "Доступность", Не ЭтаФорма.ТолькоПросмотрФормы, МассивТолькоПросмотр);
	
	МассивТолькоПросмотр.Очистить();
	МассивТолькоПросмотр.Добавить("ЮрФизЛицо");
	МассивТолькоПросмотр.Добавить("НаименованиеОрганизации");
	МассивТолькоПросмотр.Добавить("ГруппаФИО");
	МассивТолькоПросмотр.Добавить("ГруппаИННКПП");
	МассивТолькоПросмотр.Добавить("КодФилиала");
	МассивТолькоПросмотр.Добавить("СтранаРегистрации");
	МассивТолькоПросмотр.Добавить("ГруппаАдрес");
	МассивТолькоПросмотр.Добавить("ГруппаКонтакты");
	МассивТолькоПросмотр.Добавить("ГруппаПолномочия");
	МассивТолькоПросмотр.Добавить("ГруппаОснованиеОформителя");
	
	Saby_ТНОбщегоНазначенияКлиентСервер.ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "ТолькоПросмотр", ЭтаФорма.ТолькоПросмотрФормы, МассивТолькоПросмотр);
		
	Элементы.ГруппаЗаполнениеДанных.Видимость            = Не ЭтаФорма.ТолькоПросмотрФормы; 
	Элементы.ДекорацияЗаполнитьАдресДоставки.Доступность = Не ЭтаФорма.ТолькоПросмотрФормы;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеРеквизитовФормы(Знач ДанныеЗаполнения)
	
	Saby_ТНОбщегоНазначенияСервер.ЗаполнитьРеквизитыФормы(ЭтаФорма, ДанныеЗаполнения);
	
	Если ДанныеЗаполнения.Свойство("ЮрФизЛицо") Тогда		
		ЭтаФорма.ЮрФизЛицо = ДанныеЗаполнения.ЮрФизЛицо;	
	Иначе 
		ЭтаФорма.ЮрФизЛицо = Перечисления.Saby_ЮрФизЛицо.ЮрЛицо;
	КонецЕсли;
			
	ЭтаФорма.ЭтоИП = (ЭтаФорма.ЮрФизЛицо = Перечисления.Saby_ЮрФизЛицо.ИндивидуальныйПредприниматель);
	Если ЭтоИП И ДанныеЗаполнения.Свойство("СтруктураФИО") Тогда
		Если ЗначениеЗаполнено(ДанныеЗаполнения.СтруктураФИО) Тогда 
			СтруктураФИО = ЗначениеИзСтрокиВнутр(ДанныеЗаполнения.СтруктураФИО);
			ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураФИО);
		КонецЕсли;		
	КонецЕсли;		
	
	Если ДанныеЗаполнения.Свойство("ЭлементФормы") Тогда 
		ЭтаФорма.ЭлементФормы = ДанныеЗаполнения.ЭлементФормы;
	КонецЕсли;
	
	Если ЭтаФорма.Роль = Перечисления.Saby_РолиКонтрагентов.УполномоченноеЛицоПеревозчика Тогда
		ЭтаФорма.Полномочия = 1;
	КонецЕсли;	
	
КонецПроцедуры

#Область Телефоны

&НаКлиенте
Процедура ТелефоныТелефонПриИзменении(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭтаФорма.ТекущийЭлемент = Элементы.Телефоны; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныПослеУдаления(Элемент)
КонецПроцедуры

#КонецОбласти // Телефоны

&НаКлиенте
Процедура ОбработкаВыбораВодителя(ВыбранныйЭлемент, ДопПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ЭтаФорма.Водитель = ВыбранныйЭлемент;				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаПриИзменении(Элемент)
	
	ОбновитьДанныеПоСсылке();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеПоСсылке()
	
	Если ЗначениеЗаполнено(ЭтаФорма.КонтрагентОрганизация) Тогда 
		ОбновитьДанныеЮрЛицНаСервере(); 
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	
	ОбновитьВидимостьИДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьИДоступностьЭлементовНаКлиенте() Экспорт
	ОбновитьВидимостьИДоступностьЭлементов();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФИОСтрокой(Знач Фамилия, Знач Имя, Знач Отчество)

	СтруктураФИО = Новый Структура;
	СтруктураФИО.Вставить("Фамилия",  Фамилия);
	СтруктураФИО.Вставить("Имя",      Имя);
	СтруктураФИО.Вставить("Отчество", Отчество);
	
	Возврат ЗначениеВСтрокуВнутр(СтруктураФИО);
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеЮрЛицНаСервере()
	
	ДанныеЮрЛиц.Очистить();
	
	Saby_ТНОбщегоНазначенияСервер.ОбновитьДанныеЮрЛиц(ЭтаФорма, РольСтрокой, "КонтрагентОрганизация");
	
	Если ЭтаФорма.ДанныеЮрЛиц.Количество() Тогда
		
		Строка    = ЭтаФорма.ДанныеЮрЛиц[0];	
		Структура = Saby_ТНОбщегоНазначенияКлиентСервер.СтруктураДанныхЮрЛица();
		Структура.Удалить("КонтактныеДанные");
				
		Если Строка.ЮрФизЛицо = Перечисления.Saby_ЮрФизЛицо.ЮрЛицо Тогда
		 	Строка.НаименованиеОрганизации = СокрЛП(ЭтаФорма.КонтрагентОрганизация);
		КонецЕсли;
		
		Строка.Роль = Роль;  
		
		ЗаполнитьЗначенияСвойств(Структура, Строка);		
		ЗаполнениеРеквизитовФормы(Структура);
		
	Иначе 
		ОчиститьРеквизитыФормы();
	КонецЕсли;	
	
	Для Каждого СтруктураКонтактныхДанных Из ЭтаФорма.КонтактныеДанные Цикл
		СтруктураКонтактныхДанных.Роль                   = Роль;
		СтруктураКонтактныхДанных.КлючСтроки_ДанныеЮрЛиц = ЭтаФорма.КлючСтроки;
	КонецЦикла;
	
	ОбновитьВидимостьИДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Функция МассивКонтактныхДанных(ТаблицаКонтактныхДанных)
	
	РезультатФункции = Новый Массив;
	
	Для Каждого СтрокаКонтактныхДанных Из ТаблицаКонтактныхДанных Цикл
		
		СтруктураКонтактныхДанных = Saby_ТНОбщегоНазначенияКлиентСервер.СтруктураКонтактныхДанных();
		ЗаполнитьЗначенияСвойств(СтруктураКонтактныхДанных, СтрокаКонтактныхДанных);
		
		РезультатФункции.Добавить(СтруктураКонтактныхДанных);
		
	КонецЦикла;
	
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьНовуюСтрокуКонтактнойИнформации(ИмяТЧ)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Роль", ПредопределенноеЗначение("Перечисление.Saby_РолиКонтрагентов.ПустаяСсылка"));
	
	НайденныеСтроки = КонтактныеДанные.НайтиСтроки(Отбор);
	Для Каждого Строка Из НайденныеСтроки Цикл 
		Строка.Роль                   = ЭтаФорма.Роль;
		Строка.КлючСтроки_ДанныеЮрЛиц = ЭтаФорма.КлючСтроки;
	КонецЦикла;
				
КонецПроцедуры

&НаКлиенте
Функция УдалитьЗапись()
	
	Если ЭтаФорма.ЭтоИП Тогда
		Возврат Не ЗначениеЗаполнено(ЭтаФорма.Фамилия)
			И Не ЗначениеЗаполнено(ЭтаФорма.Имя)
			И Не ЗначениеЗаполнено(ЭтаФорма.Отчество)
			И Не ЗначениеЗаполнено(ЭтаФорма.ИНН);
	Иначе
		Возврат Не ЗначениеЗаполнено(ЭтаФорма.ИНН)
			И Не ЗначениеЗаполнено(ЭтаФорма.КПП)
			И Не ЗначениеЗаполнено(ЭтаФорма.НаименованиеОрганизации);
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановкаСпискаДоступныхТиповКИ()
		
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("КонтактныеДанныеТип");
		
	Saby_ТНОбщегоНазначенияСервер.УстановкаСпискаДоступныхТиповКИ(ЭтаФорма, МассивЭлементов);
	   
КонецПроцедуры


&НаКлиенте
Процедура ИзменитьАдрес(СтандартнаяОбработка) 
	
	ПараметрыВыбораАдреса = Новый Структура;
	ПараметрыВыбораАдреса.Вставить("Роль",           Роль);
	ПараметрыВыбораАдреса.Вставить("Значение",       ЭтаФорма.АдресСтруктура);
	ПараметрыВыбораАдреса.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотрФормы);
	
	Saby_ТНОбщегоНазначенияКлиент.АдресНачалоВыбора(ЭтаФорма, ПараметрыВыбораАдреса, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
