
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьРеквизитыИзПараметров(Параметры);
	
	ОбновитьВидимостьДоступностьЭлементовФормы(Параметры.ТолькоПросмотр);
	
	Если Параметры.Свойство("ОснованияВладения") Тогда
		ЗаполнитьОснованияВладенияИзСтроки(Параметры.ОснованияВладения);
	КонецЕсли;
	
	УстановитьТипыРеквизитов();
	
	ОбновитьОтображениеОснованийВладения();
	
	НастроитьДокументыЭПД();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТранспортноеСредствоПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	ЗаполнитьРеквизитыНаОснованииСправочника();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипВладенияПриИзменении(Элемент)
	
	ОбновитьОтображениеОснованийВладения();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументыЭПД

&НаКлиенте
Процедура ДокументыЭПДПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер").НовыйКлючОсновнойСтроки(
			ЭтаФорма, "ДокументыЭПД");
		Элемент.ТекущиеДанные.Тип = ЗначениеМетаданных("Saby_ТипыДокумента.ПодтверждениеВладения");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыДокументыЭПД

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	СтруктураТранспортногоСредства = Новый Структура();
	СтруктураТранспортногоСредства.Вставить("Вид",                  ЭтаФорма.Вид);
	СтруктураТранспортногоСредства.Вставить("РегистрационныйНомер", ЭтаФорма.РегистрационныйНомер);
	СтруктураТранспортногоСредства.Вставить("Тип",                  ЭтаФорма.Тип);
	СтруктураТранспортногоСредства.Вставить("Марка",                ЭтаФорма.Марка);
	СтруктураТранспортногоСредства.Вставить("Модель",               ЭтаФорма.Модель);
	СтруктураТранспортногоСредства.Вставить("ВИН",                  ЭтаФорма.ВИН);
	СтруктураТранспортногоСредства.Вставить("НомерСТС",             ЭтаФорма.НомерСТС);
	СтруктураТранспортногоСредства.Вставить("Грузоподъемность",     ЭтаФорма.Грузоподъемность);
	СтруктураТранспортногоСредства.Вставить("Вместимость",          ЭтаФорма.Вместимость);
	СтруктураТранспортногоСредства.Вставить("ТипВладения",          ЭтаФорма.ТипВладения);
	СтруктураТранспортногоСредства.Вставить("ИнвентарныйНомер",     ЭтаФорма.ИнвентарныйНомер);
	
	СтруктураТранспортногоСредства.Вставить(
		"ОснованияВладения", ОснованияВладенияВСтроку(ЭтаФорма.ДокументыЭПД));
	
	Закрыть(СтруктураТранспортногоСредства);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаОсновании(Команда)
	
	ЗаполнитьРеквизитыНаОснованииСправочника();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсеПоля(Команда)
	
	ОчиститьРеквизитыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРеквизитыФормы() 
	
	РеквизитыИсключения = Новый Массив();
	РеквизитыИсключения.Добавить("Вид");
	РеквизитыИсключения.Добавить("Объект");
	
	МодульКода("Saby_ТНОбщегоНазначенияСервер").ОчиститьРеквизитыФормы(ЭтаФорма, РеквизитыИсключения);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеНаОсновании

&НаСервере
Процедура ЗаполнитьРеквизитыНаОснованииСправочника()
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ТранспортноеСредство) Тогда
		Возврат;
	КонецЕсли;
	
	МассивТС = Новый Массив;
	МассивТС.Добавить(ЭтотОбъект.ТранспортноеСредство);
	РеквизитыТС = МодульКода("Saby_ТНОбщегоНазначенияСервер").РеквизитыТранспортныхСредств(МассивТС);
	РеквизитыТС = РеквизитыТС[ЭтотОбъект.ТранспортноеСредство];
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыТС, , "Вид");
	ЗаполнитьОснованияВладенияИзСтроки(РеквизитыТС.ОснованияВладения);
	
	ОбновитьОтображениеОснованийВладения();
	
КонецПроцедуры

#КонецОбласти // ЗаполнениеНаОсновании

&НаСервере
Процедура ЗаполнитьРеквизитыИзПараметров(ДанныеЗаполнения)
	
	РеквизитыИсключения = Новый Массив;
	РеквизитыИсключения.Добавить("ДокументыЭПД");
	
	МодульКода("Saby_ТНОбщегоНазначенияСервер").ЗаполнитьРеквизитыФормы(ЭтаФорма, ДанныеЗаполнения, РеквизитыИсключения);
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Вид) Тогда
		Если ДанныеЗаполнения.ЭтоПрицеп Тогда
			ЭтотОбъект.Вид = ЗначениеМетаданных("Saby_ВидыТС.Прицеп");
		Иначе
			ЭтотОбъект.Вид = ЗначениеМетаданных("Saby_ВидыТС.Автомобиль");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеОснованийВладения()
	
	Элементы.ДокументыЭПД.Видимость = МодульКода("Перечисления.Saby_ТипыВладенияТС").ТребуетПодтвержденияВладения(
		ЭтотОбъект.ТипВладения);
		
	Если Не Элементы.ДокументыЭПД.Видимость Тогда
		ЭтаФорма.ДокументыЭПД.Очистить();
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОснованияВладенияВСтроку(Знач ОснованияВладения)
	
	МассивОснований = Новый Массив;
	Для Каждого СтрокаОснованияВладения Из ОснованияВладения Цикл
		МассивОснований.Добавить(СтрокаОснованияВладения.ДокументВладения);
	КонецЦикла;
	
	Если МассивОснований.Количество() > 0 Тогда
		Возврат ЗначениеВСтрокуВнутр(МассивОснований);
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОснованияВладенияИзСтроки(ОснованияВладенияСтрокой)
	
	ДокументыЭПД.Очистить();
	
	Если Не ЗначениеЗаполнено(ОснованияВладенияСтрокой) Тогда
		Возврат;
	КонецЕсли;
	
	МассивОснований = ЗначениеИзСтрокиВнутр(ОснованияВладенияСтрокой);
	
	Для Каждого Основание Из МассивОснований Цикл
		НоваяСтрока = ДокументыЭПД.Добавить();
		НоваяСтрока.ДокументВладения = Основание;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьДоступностьЭлементовФормы(ТолькоПросмотр)
	
	Элементы.ГруппаЗаполнениеНаОсновании.Видимость = Не ТолькоПросмотр;
		
	УбратьДоступность = Новый Массив; 
	СкрытьВидимость   = Новый Массив;
	
	УбратьДоступность.Добавить("ФормаЗаписатьИЗакрыть");
	УбратьДоступность.Добавить("ФормаОчиститьВсеПоля");
	УбратьДоступность.Добавить("ЗаполнитьНаОсновании");
	
	МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "Доступность", Не ТолькоПросмотр, УбратьДоступность);
	
	Если ЭтаФорма.ТипДокументаИсточника = "Saby_ПутевойЛист" Тогда
		
		СкрытьВидимость.Добавить("ВИН");
		СкрытьВидимость.Добавить("НомерСТС");
		СкрытьВидимость.Добавить("Грузоподъемность");
		СкрытьВидимость.Добавить("Вместимость");
		СкрытьВидимость.Добавить("ТипВладения");
		СкрытьВидимость.Добавить("ДокументыЭПД");
				
		Если ЭтаФорма.Вид = ЗначениеМетаданных("Saby_ВидыТС.Прицеп") Тогда
						
			СкрытьВидимость.Добавить("Тип");
			СкрытьВидимость.Добавить("ИнвентарныйНомер");
			
		КонецЕсли;
		
	Иначе
			
		СкрытьВидимость.Добавить("ИнвентарныйНомер");
		СкрытьВидимость.Добавить("Модель");
		
	КонецЕсли;
			
	МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ИзменитьСвойствоЭлементовФормы(
		ЭтаФорма, "Видимость", Ложь, СкрытьВидимость);
	
	Если ТолькоПросмотр Тогда 
		УстановитьТолькоПросмотр(ТолькоПросмотр);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТолькоПросмотр(ТолькоПросмотр)
	
	МассивЭлементов = Новый Массив;
	Для Каждого РеквизитФормы Из ЭтаФорма.ПолучитьРеквизиты() Цикл
		Если ЭтаФорма.Элементы.Найти(РеквизитФормы.Имя) <> Неопределено Тогда
			МассивЭлементов.Добавить(РеквизитФормы.Имя);
		КонецЕсли;		
	КонецЦикла;
	
    МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ИзменитьСвойствоЭлементовФормы(
			ЭтаФорма, "ТолькоПросмотр", Истина, МассивЭлементов);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипыРеквизитов()
	
	МодульТНОбщегоНазначенияСервер = МодульКода("Saby_ТНОбщегоНазначенияСервер");
	
	ТипСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(32));
	
    МассивТипов = Новый Массив;
	МассивТипов.Добавить("Перечисления.Saby_ТипыВладенияТС");
	МодульТНОбщегоНазначенияСервер.УстановитьОграниченияТипов(Элементы.ТипВладения, МассивТипов, ТипСтрока);
	
	Если Элементы.ТипВладения.ОграничениеТипа.СодержитТип(Тип("Строка")) Тогда
		Элементы.ТипВладения.РежимВыбораИзСписка = Истина;
		Элементы.ТипВладения.КнопкаВыпадающегоСписка = Истина;
		Элементы.ТипВладения.СписокВыбора.Добавить("Собственность");
		Элементы.ТипВладения.СписокВыбора.Добавить("СовместнаяСобственностьСупругов", "Совместная собственность супругов");
		Элементы.ТипВладения.СписокВыбора.Добавить("Аренда");
		Элементы.ТипВладения.СписокВыбора.Добавить("Лизинг");
		Элементы.ТипВладения.СписокВыбора.Добавить("БезвозмездноеПользование", "Безвозмездное пользование");
	КонецЕсли;
	
	МассивТипов.Очистить();
	МассивТипов.Добавить("Справочники.уатТС");
	МассивТипов.Добавить("Справочники.ТранспортныеСредства");
	МодульТНОбщегоНазначенияСервер.УстановитьОграниченияТипов(Элементы.ТранспортноеСредство, МассивТипов);
	
	МассивТипов.Очистить();
	МассивТипов.Добавить("Справочники.Saby_ДокументыЭПД");
	МодульТНОбщегоНазначенияСервер.УстановитьОграниченияТипов(Элементы.ДокументыЭПДДокументВладения, МассивТипов);
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Тип", ЗначениеМетаданных("Saby_ТипыДокумента.ПодтверждениеВладения"));
	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(ПараметрВыбора);
	ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	Элементы.ДокументыЭПДДокументВладения.ПараметрыВыбора = ПараметрыВыбора;
	
КонецПроцедуры

#Область include_etrn_base_CommonForm_ТранспортноеСредствоЭПД_СлужебныеПроцедурыИФункции
#КонецОбласти // include_etrn_base_CommonForm_ТранспортноеСредствоЭПД_СлужебныеПроцедурыИФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
