
#Область ПрограммныйИнтерфейс

// Возвращает для указанного титула данные титула отказа.
// В качестве параметра данной функции чаще всего используется последний успешный титул по документу,
// который был перед титулом отказа (УведомлениеОУточнении).
//
// Параметры:
//  ТипТитула - ПеречислениеСсылка.Saby_ТипТитулаЗнП - титул, для которого необходимо получить титул отказа.
//
// Возвращаемое значение:
//   Структура - данные титула отказа:
//     * Тип - ПеречислениеСсылка.Saby_ТипТитулаЗнП - титул, который был отменен.
//     * Представление - Строка - строковое представление титула отказа, для вывода пользователю.
//
Функция ТитулОтказа(ТипТитула) Экспорт
	
	РезультатФункции = Новый Структура;
	РезультатФункции.Вставить("Тип",           ПустаяСсылка());
	РезультатФункции.Вставить("Представление", "");
	
	Возврат РезультатФункции;
	
КонецФункции

// Возвращает соответствующее значение перечисления переданному коду.
//
// Параметры:
//  КодТитула - Строка - строковый код значения. Данный код чаще всего передает онлайн.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЗнП - ссылка на перечисление.
//     Если по коду ссылка не найдена, то возвращается пустая ссылка.
//
Функция ЗначениеПоКоду(Знач КодТитула) Экспорт
	
	Если КодТитула = "1110361" Тогда
		Возврат Оформление;
	ИначеЕсли КодТитула = "1110362" Тогда
		Возврат Утверждение;
	Иначе
		Возврат ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Возвращает соответствующее значение перечисления переданному имени подстановки.
//
// Параметры:
//  ИмяПодстановки - Строка - строковый код значения. Данный код чаще всего передает онлайн.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЗнП - ссылка на перечисление.
//     Если по коду ссылка не найдена, то возвращается пустая ссылка.
//
Функция ЗначениеПоИмениПодстановки(Знач ИмяПодстановки) Экспорт
	
	Если ИмяПодстановки = "ИнформацияГрузоотправителя" Тогда
		Возврат Оформление;
	ИначеЕсли ИмяПодстановки = "ИнформацияГрузоперевозчика" Тогда
		Возврат Утверждение;
	Иначе
		Возврат ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Возвращает соответствующее значение перечисления переданному представлению.
//
// Параметры:
//  Представление - Строка - строковое представление титула в человекочитаемом формате.
//    Обычно совпадает с синонимом перечисления. Данное представление чаще всего передает онлайн.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЗнП - ссылка на перечисление.
//     Если по представлению ссылка не найдена, то возвращается пустая ссылка.
//
Функция ЗначениеПоПредставлению(Представление) Экспорт
	
	Если Представление = "Информация грузоотправителя" Тогда
		Возврат Оформление;
	ИначеЕсли Представление = "Информация грузоперевозчика" Тогда
		Возврат Утверждение;
	Иначе
		Возврат ЗначениеПоЭтапу(Представление);
	КонецЕсли;
	
КонецФункции

// Возвращает соответствующее значение перечисления переданному этапу.
//
// Параметры:
//  НаименованиеЭтапа - Строка - строковое представление этапа в человекочитаемом формате.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЗнП - ссылка на перечисление.
//     Если по представлению ссылка не найдена, то возвращается пустая ссылка.
//
Функция ЗначениеПоЭтапу(НаименованиеЭтапа) Экспорт
	
	Если НаименованиеЭтапа = "Оформление" Тогда
		Возврат Оформление;
	ИначеЕсли НаименованиеЭтапа = "Утверждение" Тогда
		Возврат Утверждение;
	Иначе
		Возврат ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру различных представлений указанной ссылки на тип титула.
// Используется для исключения лишних запросов к базе.
//
// Параметры:
//  СсылкаНаТитул - ПеречислениеСсылка.Saby_ТипТитулаЗнП - ссылка на титул,
//    для которого необходимо получить представления.
//
// Возвращаемое значение:
//   Структура - структура различных представлений типа титула.
//     Перечень доступных значений см. в функции Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула
//
Функция ПредставленияТитула(СсылкаНаТитул) Экспорт
	
	Если ЭтоПервыйТитул(СсылкаНаТитул) Тогда
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(
			Оформление, "1110361", "ИнформацияГрузоотправителя");
	ИначеЕсли СсылкаНаТитул = Утверждение Тогда
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(
			Утверждение, "1110362", "ИнформацияГрузоперевозчика");
	Иначе
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(ПустаяСсылка(), "", "");
	КонецЕсли;
	
КонецФункции

// Проверяет является ли титул динамическим.
//
// Параметры:
//  ТипТитула - ПеречислениеСсылка.Saby_ТипТитулаЗнП - титул для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если динамический.
//
Функция ЭтоДинамическийТитул(ТипТитула) Экспорт
	
    Возврат Ложь;
	
КонецФункции

// Проверяет является ли титул первым в документообороте
//
// Параметры:
//  ТипТитула - ПеречислениеСсылка.Saby_ТипТитулаЗнП - титул для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если титул погрузки.
//
Функция ЭтоПервыйТитул(ТипТитула) Экспорт
	
	Возврат Не ЗначениеЗаполнено(ТипТитула) Или ТипТитула = Оформление;
	
КонецФункции

// Возвращает первый титул в документообороте
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЗнП - первый титул
//
Функция ПервыйТитул() Экспорт
	
	Возврат Оформление;
	
КонецФункции

// Формирует временную таблицу основных титулов для вывода в ленту
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер для сохранения таблицы дополнений.
//  ТекущиеЭтапыДокумента - Массив - массив ссылок текущих этапов документа
//
Процедура СформироватьТаблицуДополнения(МенеджерВременныхТаблиц, ТекущиеЭтапыДокумента) Экспорт
	
	ЗапросДанных = Новый Запрос;
	ЗапросДанных.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросДанных.Текст =
	"ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 1) КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЗнП.Оформление) КАК ТипТитула,
	|	"""" КАК ИдентификаторТитула,
	|	ИСТИНА КАК Основной,
	|	"""" КАК Данные,
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЗнП.ПустаяСсылка) КАК ТипТитулаОтказа,
	|	1 КАК ТипТитулаПорядок
	|ПОМЕСТИТЬ ТаблицаДополнения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 2),
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЗнП.Утверждение),
	|	"""",
	|	ИСТИНА,
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЗнП.ПустаяСсылка),
	|	2";
	
	ЗапросДанных.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	ЗапросДанных.Выполнить();
	
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
