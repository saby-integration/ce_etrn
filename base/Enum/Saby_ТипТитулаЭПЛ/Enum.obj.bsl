
#Область ПрограммныйИнтерфейс

// Возвращает для указанного титула данные титула отказа.
// В качестве параметра данной функции чаще всего используется последний успешный титул по документу,
// который был перед титулом отказа (УведомлениеОУточнении).
//
// Параметры:
//  ТипТитула - ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - титул, для которого необходимо получить титул отказа.
//
// Возвращаемое значение:
//   Структура - данные титула отказа:
//     * Тип - ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - титул, который был отменен.
//     * Представление - Строка - строковое представление титула отказа, для вывода пользователю.
//
Функция ТитулОтказа(ТипТитула) Экспорт
	
	РезультатФункции = Новый Структура;
	РезультатФункции.Вставить("Тип",           ПустаяСсылка());
	РезультатФункции.Вставить("Представление", "");
	
	Возврат РезультатФункции;
	
КонецФункции

// Возвращает соответствующее значение перечисления переданному коду.
//
// Параметры:
//  КодТитула - Строка - строковый код значения. Данный код чаще всего передает онлайн.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - ссылка на перечисление.
//     Если по коду ссылка не найдена, то возвращается пустая ссылка.
//
Функция ЗначениеПоКоду(Знач КодТитула) Экспорт
	
	Если КодТитула = "1110380" Тогда
		Возврат Выпуск;
	ИначеЕсли КодТитула = "1110381" Тогда
		Возврат ПредрейсовыйМедосмотр;
	ИначеЕсли КодТитула = "1110382" Тогда
		Возврат ПредрейсовыйТехосмотр;
	ИначеЕсли КодТитула = "1110383" Тогда
		Возврат Выпускающий;
	ИначеЕсли КодТитула = "1110384" Тогда
		Возврат Принимающий;
	ИначеЕсли КодТитула = "1110385" Тогда
		Возврат ПослерейсовыйМедосмотр;
	Иначе
		Возврат ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Возвращает соответствующее значение перечисления переданному имени подстановки.
//
// Параметры:
//  ИмяПодстановки - Строка - строковый код значения. Данный код чаще всего передает онлайн.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - ссылка на перечисление.
//     Если по коду ссылка не найдена, то возвращается пустая ссылка.
//
Функция ЗначениеПоИмениПодстановки(Знач ИмяПодстановки) Экспорт
	
	Если ИмяПодстановки = "ОтветственныйЗаВыпуск" Тогда
		Возврат Выпуск;
	ИначеЕсли ИмяПодстановки = "ПредрейсовыйМедосмотр" Тогда
		Возврат ПредрейсовыйМедосмотр;
	ИначеЕсли ИмяПодстановки = "ПредрейсовыйТехосмотр" Тогда
		Возврат ПредрейсовыйТехосмотр;
	ИначеЕсли ИмяПодстановки = "Выпускающий" Тогда
		Возврат Выпускающий;
	ИначеЕсли ИмяПодстановки = "Принимающий" Тогда
		Возврат Принимающий;
	ИначеЕсли ИмяПодстановки = "ПослерейсовыйМедосмотр" Тогда
		Возврат ПослерейсовыйМедосмотр;
	Иначе
		Возврат ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Возвращает соответствующее значение перечисления переданному представлению.
//
// Параметры:
//  Представление - Строка - строковое представление титула в человекочитаемом формате.
//    Обычно совпадает с синонимом перечисления. Данное представление чаще всего передает онлайн.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - ссылка на перечисление.
//     Если по представлению ссылка не найдена, то возвращается пустая ссылка.
//
Функция ЗначениеПоПредставлению(Представление) Экспорт
	
	Если Представление = "Ответственный за выпуск" Тогда
		Возврат Выпуск;
	ИначеЕсли Представление = "Предрейсовый медосмотр" Тогда
		Возврат ПредрейсовыйМедосмотр;
	ИначеЕсли Представление = "Предрейсовый техосмотр" Тогда
		Возврат ПредрейсовыйТехосмотр;
	ИначеЕсли Представление = "Выпуск в рейс" Тогда
		Возврат Выпускающий;
	ИначеЕсли Представление = "Прием из рейса" Тогда
		Возврат Принимающий;
	ИначеЕсли Представление = "Послерейсовый медосмотр" Тогда
		Возврат ПослерейсовыйМедосмотр;
	Иначе
		Возврат ЗначениеПоЭтапу(Представление);
	КонецЕсли;
	
КонецФункции

// Возвращает соответствующее значение перечисления переданному этапу.
//
// Параметры:
//  НаименованиеЭтапа - Строка - строковое представление этапа в человекочитаемом формате.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - ссылка на перечисление.
//     Если по представлению ссылка не найдена, то возвращается пустая ссылка.
//
Функция ЗначениеПоЭтапу(НаименованиеЭтапа) Экспорт
	
	Если НаименованиеЭтапа = "Внутренний МО"
		Или НаименованиеЭтапа = "Внешний МО"
		Или НаименованиеЭтапа = "Медосмотр" Тогда
		Возврат ПредрейсовыйМедосмотр;
	ИначеЕсли НаименованиеЭтапа = "Внутренний ТО"
		Или НаименованиеЭтапа = "Внешний ТО"
		Или НаименованиеЭтапа = "Техосмотр" Тогда
		Возврат ПредрейсовыйТехосмотр;
	ИначеЕсли НаименованиеЭтапа = "Выпуск в рейс" Тогда
		Возврат Выпускающий;
	ИначеЕсли НаименованиеЭтапа = "Приемка" Тогда
		Возврат Принимающий;
	ИначеЕсли ЭтоПослерейсовыйМедосмотр(НаименованиеЭтапа) Тогда
		Возврат ПослерейсовыйМедосмотр;
	Иначе
		Возврат ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру различных представлений указанной ссылки на тип титула.
// Используется для исключения лишних запросов к базе.
//
// Параметры:
//  СсылкаНаТитул - ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - ссылка на титул,
//    для которого необходимо получить представления.
//
// Возвращаемое значение:
//   Структура - структура различных представлений типа титула.
//     Перечень доступных значений см. в функции Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула
//
Функция ПредставленияТитула(СсылкаНаТитул) Экспорт
	
	Если ЭтоПервыйТитул(СсылкаНаТитул) Тогда
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(
			Выпуск, "1110380", "ОтветственныйЗаВыпуск");
	ИначеЕсли СсылкаНаТитул = ПредрейсовыйМедосмотр Тогда
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(
			ПредрейсовыйМедосмотр, "1110381", "ПредрейсовыйМедосмотр");
	ИначеЕсли СсылкаНаТитул = ПредрейсовыйТехосмотр Тогда
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(
			ПредрейсовыйТехосмотр, "1110382", "ПредрейсовыйТехосмотр");
	ИначеЕсли СсылкаНаТитул = Выпускающий Тогда
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(
			Выпускающий, "1110383", "Выпускающий");
	ИначеЕсли СсылкаНаТитул = Принимающий Тогда
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(
			Принимающий, "1110384", "Принимающий");
	ИначеЕсли СсылкаНаТитул = ПослерейсовыйМедосмотр Тогда
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(
			ПослерейсовыйМедосмотр, "1110385", "ПослерейсовыйМедосмотр");
	Иначе
		Возврат Saby_ТНОбщегоНазначенияСервер.СтруктураПредставленияТитула(ПустаяСсылка(), "", "");
	КонецЕсли;
	
КонецФункции

// Проверяет является ли титул динамическим.
//
// Параметры:
//  ТипТитула - ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - титул для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если динамический.
//
Функция ЭтоДинамическийТитул(ТипТитула) Экспорт
	
    Возврат Ложь;
	
КонецФункции

// Проверяет является ли титул первым в документообороте
//
// Параметры:
//  ТипТитула - ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - титул для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если титул погрузки.
//
Функция ЭтоПервыйТитул(ТипТитула) Экспорт
	
	Возврат Не ЗначениеЗаполнено(ТипТитула) Или ТипТитула = Выпуск;
	
КонецФункции

// Возвращает первый титул в документообороте
//
// Возвращаемое значение:
//   ПеречислениеСсылка.Saby_ТипТитулаЭПЛ - первый титул
//
Функция ПервыйТитул() Экспорт
	
	Возврат Выпуск;
	
КонецФункции

// Формирует временную таблицу основных титулов для вывода в ленту
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер для сохранения таблицы дополнений.
//
Процедура СформироватьТаблицуДополнения(МенеджерВременныхТаблиц) Экспорт
	
	ЗапросДанных = Новый Запрос;
	ЗапросДанных.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросДанных.Текст =
	"ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 1) КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.Выпуск) КАК ТипТитула,
	|	"""" КАК ИдентификаторТитула,
	|	ИСТИНА КАК Основной,
	|	"""" КАК Данные,
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПустаяСсылка) КАК ТипТитулаОтказа
	|ПОМЕСТИТЬ ТаблицаДополнения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 2),
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПредрейсовыйМедосмотр),
	|	"""",
	|	ИСТИНА,
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 3),
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПредрейсовыйТехосмотр),
	|	"""",
	|	ИСТИНА,
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 4),
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.Выпускающий),
	|	"""",
	|	ИСТИНА,
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 5),
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.Принимающий),
	|	"""",
	|	ИСТИНА,
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, 6),
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПослерейсовыйМедосмотр),
	|	"""",
	|	ИСТИНА,
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.Saby_ТипТитулаЭПЛ.ПустаяСсылка)";
	
	ЗапросДанных.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	ЗапросДанных.Выполнить();
	
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ЭтоПослерейсовыйМедосмотр(НаименованиеЭтапа)
	
	Возврат НаименованиеЭтапа = "Внутренний послерейсовый МО"
		Или НаименованиеЭтапа = "Внешний послерейсовый МО"
		Или НаименованиеЭтапа = "Послерейсовый медосмотр"
		Или НаименованиеЭтапа = "Пост-медосмотр";
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
