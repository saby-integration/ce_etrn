
#Область ПрограммныйИнтерфейс

// Сохраняет данные титула в дополнительные свойства объекта, чтобы в дальнейшем записать их в регистр.
// Используется в том случае, когда документа еще нет в базе на момент загрузки из СБИС.
//
// Параметры:
//  СтруктураТитулаДляРегистра - Структура - Структура данных титула для записи в регистр.
//
Процедура ДобавитьСтруктуруТитулаДляЗаписи(СтруктураТитулаДляРегистра) Экспорт
	
	Если Не ДополнительныеСвойства.Свойство("ТитулыДляПривязки") Тогда
		ДополнительныеСвойства.Вставить("ТитулыДляПривязки", Новый Массив);
	КонецЕсли;
	
	ДополнительныеСвойства.ТитулыДляПривязки.Добавить(СтруктураТитулаДляРегистра);
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	ЭтотОбъект.ТранспортноеСредство_РегНомер = 
		Saby_ТНОбщегоНазначенияСервер.ТранспортныеСредстваСтрокой(ЭтотОбъект);
	
	ЗаполнитьРеквизитыДляФормыСписка();
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ТитулыДляПривязки") Тогда
		РегистрыСведений.Saby_ДанныеТитулов.ПривязатьТитулыКДокументу(
			Ссылка,
			ДополнительныеСвойства.ТитулыДляПривязки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РеквизитыДляОчистки = Новый Массив;
	
	// Служебные 
	РеквизитыДляОчистки.Добавить("ДатаИзменения");
	РеквизитыДляОчистки.Добавить("НомерСбис");
	РеквизитыДляОчистки.Добавить("Комментарий");
	РеквизитыДляОчистки.Добавить("ТекущиеЭтапы");
	
	// Предрейсовый МО
	РеквизитыДляОчистки.Добавить("ДоРейса_ДатаВремяМедосмотра");
	РеквизитыДляОчистки.Добавить("ДоРейса_КомментарииМедосмотра");
	
	// ТО
	РеквизитыДляОчистки.Добавить("ТО_ДатаВремя");
	РеквизитыДляОчистки.Добавить("ТО_ДатаВремяВыпускаВРейс");
	РеквизитыДляОчистки.Добавить("ТО_Комментарий");
	
	// Выезд
	РеквизитыДляОчистки.Добавить("Выезд_ДатаВремя");
	РеквизитыДляОчистки.Добавить("Выезд_Одометр");
	РеквизитыДляОчистки.Добавить("Выезд_ОдометрКомментарии");
	
	// Заезд
	РеквизитыДляОчистки.Добавить("Заезд_Одометр");
	РеквизитыДляОчистки.Добавить("Заезд_ОдометрКомментарии");

	Saby_ТНОбщегоНазначенияСервер.ОчисткаРеквизитовОбъекта(ЭтотОбъект, РеквизитыДляОчистки);
	
	// Записи по ответственным
	Saby_ТНОбщегоНазначенияСервер.УдалитьСтрокуПоРоли(ЭтотОбъект, "ОтветственныеЛица", "ОдометрВыезд");
	Saby_ТНОбщегоНазначенияСервер.УдалитьСтрокуПоРоли(ЭтотОбъект, "ОтветственныеЛица", "ОдометрЗаезд");
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий 

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРеквизитыДляФормыСписка()
	
	ЗаполнитьОтветственныхЛиц();
	ЗаполнитьОрганизациюПоРоли("Оформитель", "Организация");
	
КонецПроцедуры

Процедура ЗаполнитьОтветственныхЛиц()
	
	ЗаполнитьОтветственногоМедосмотр();
	
	РольВодитель = Перечисления.Saby_РолиОтветственных.Водитель;
	РольМеханик  = Перечисления.Saby_РолиОтветственных.Техосмотр;
	
	СтруктураОтвественных = Новый Структура;
	СтруктураОтвественных.Вставить("Водитель",  "");
	СтруктураОтвественных.Вставить("Техосмотр", "");
		
	Для Каждого ОтветственноеЛицо Из ОтветственныеЛица Цикл		
		
		ПодходящаяРоль = (ОтветственноеЛицо.Роль = РольВодитель 
			Или ОтветственноеЛицо.Роль = РольМеханик);
		
		Если ПодходящаяРоль Тогда			
			
			РольСтрокой = СокрЛП(ОтветственноеЛицо.Роль);
			НаименованиеСтрокой = Saby_ТНОбщегоНазначенияКлиентСервер.ПредставлениеФИО(ОтветственноеЛицо);
			
			СтруктураОтвественных[РольСтрокой] = НаименованиеСтрокой;
			
		Иначе 		
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	ЭтотОбъект.Водитель = СтруктураОтвественных.Водитель;
	ЭтотОбъект.Механик  = СтруктураОтвественных.Техосмотр;
	
КонецПроцедуры

Процедура ЗаполнитьОрганизациюПоРоли(РольСтрокой, Реквизит)
	
	Роль = Перечисления.Saby_РолиКонтрагентов[РольСтрокой];
	
	Отбор = Новый Структура;
	Отбор.Вставить("Роль", Роль);
	
	НайденныеСтроки = Saby_ТНОбщегоНазначенияКлиентСервер.НайтиСтрокиУниверсально(ЭтотОбъект.ДанныеЮрЛиц, Отбор);
	Если НайденныеСтроки.Количество() Тогда
		Значение = НайденныеСтроки[0].НаименованиеОрганизации;
	Иначе 	
	    Значение = "";
	КонецЕсли;	
	
	ЭтотОбъект[Реквизит] = Значение; 
	
КонецПроцедуры

Процедура ЗаполнитьОтветственногоМедосмотр()
	
	Если ЭтотОбъект.ДоРейса_МедосмотрСторонняяОрганизация Тогда  			
		ЗаполнитьОрганизациюПоРоли("МедосмотрВыезд", "Медик");		
	Иначе
		
		РольМедик = Перечисления.Saby_РолиОтветственных.МедосмотрВыезд;
		
		Отбор = Новый Структура;
		Отбор.Вставить("Роль", РольМедик);
		
		НайденныеСтроки = Saby_ТНОбщегоНазначенияКлиентСервер.НайтиСтрокиУниверсально(ЭтотОбъект.ОтветственныеЛица, Отбор);
		Если НайденныеСтроки.Количество() Тогда
			Значение = Saby_ТНОбщегоНазначенияКлиентСервер.ПредставлениеФИО(НайденныеСтроки[0]);
		Иначе 	
			Значение = "";
		КонецЕсли;	
		
		ЭтотОбъект.Медик = Значение;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
