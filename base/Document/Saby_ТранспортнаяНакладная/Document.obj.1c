
#Область ПрограммныйИнтерфейс

Процедура ДобавитьСтруктуруТитулаДляЗаписи(СтруктураТитулаДляРегистра) Экспорт
	
	Если Не ДополнительныеСвойства.Свойство("ДинамическиеТитулыДляПривязки") Тогда
		ДополнительныеСвойства.Вставить("ДинамическиеТитулыДляПривязки", Новый Массив);
	КонецЕсли;
	
	ДополнительныеСвойства.ДинамическиеТитулыДляПривязки.Добавить(СтруктураТитулаДляРегистра);
	
КонецПроцедуры

Процедура ЗаполнитьПрошлыйТитулДляВложения(Вложение, Титул, КодТитула) Экспорт
	
	Период        = Saby_ТНОбщегоНазначенияСервер.ДатаВложения(Вложение, Титул);
	Идентификатор = Saby_ТНОбщегоНазначенияСервер.ИдентификаторВложения(Вложение, КодТитула);
	
	МаксимальныйПериод = Дата(1,1,1);
	ДанныеТитула = Неопределено;
	
	Для Каждого СтруктураТитулаДляРегистра Из ДополнительныеСвойства.ДинамическиеТитулыДляПривязки Цикл
		
		Если СтруктураТитулаДляРегистра.Период <= Период
			Или СтруктураТитулаДляРегистра.ИдентификаторТитула = Идентификатор Тогда
			Продолжить;
		КонецЕсли;
		
		Если МаксимальныйПериод < СтруктураТитулаДляРегистра.Период Тогда
			МаксимальныйПериод = СтруктураТитулаДляРегистра.Период;
			ДанныеТитула = СтруктураТитулаДляРегистра;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеТитула <> Неопределено Тогда
		Вложение.Вставить("ПрошлыйТитул", Перечисления.Saby_ТипТитулаЭтрН.ТитулОтказа(ДанныеТитула.ТипТитула));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	 
	ДатаИзменения = "";
	НомерСбис     = "";
	Комментарий   = "";
	
	ДоступныеДействия.Очистить();
	Отметки.Очистить();
	Штрафы.Очистить();
	Акты.Очистить();
		
	// Страница "Погрузка"
	
	Перевозчик_ПриемкаДатаВремя                  = Дата(1, 1, 1, 0, 0, 0);
	Перевозчик_ПриемкаДатаВремяПрибыл            = Дата(1, 1, 1, 0, 0, 0);
	Перевозчик_ПриемкаДатаВремяУбыл              = Дата(1, 1, 1, 0, 0, 0);
	Перевозчик_ПогрузкаЗамечанияПоСостояниюГруза = "";
	Перевозчик_ЗамечанияПоПогрузочнымРаботам     = "";
	Перевозчик_ПогрузкаЗамечанияПоМассе          = "";
	Перевозчик_ПогрузкаЗамечанияПоКоличеству     = "";
	
	Если Не Отправитель_Экспедитор Тогда
		Заказчик         = "";
		Заказчик_Договор = "";
	КонецЕсли;
	
	// Страница "Выгрузка"
	
	// Получатель
	Выгрузка_ДатаВремяПрибыл                     = Дата(1, 1, 1, 0, 0, 0);
	Выгрузка_ДатаВремяУбыл                       = Дата(1, 1, 1, 0, 0, 0);	
	Выгрузка_МассаМетодРасчета                   = "";
	Выгрузка_КоличествоМест                      = "";
	Выгрузка_Объем                               = "";
	Выгрузка_МассаБрутто                         = "";
	Выгрузка_МассаНетто                          = "";
	Выгрузка_Состояние                           = "";
	
	// Перевозчик
	Перевозчик_ВыгрузкаДатаВремя                 = Дата(1, 1, 1, 0, 0, 0);
	Перевозчик_ВыгрузкаДатаВремяПрибыл           = Дата(1, 1, 1, 0, 0, 0);
	Перевозчик_ВыгрузкаДатаВремяУбыл             = Дата(1, 1, 1, 0, 0, 0);
	Перевозчик_ВыгрузкаЗамечанияПоСостояниюГруза = "";
	Перевозчик_ЗамечанияПоРазгрузочнымРаботам    = "";
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ДинамическиеТитулыДляПривязки") Тогда
		РегистрыСведений.Saby_ДанныеТитулов.ПривязатьТитулыКДокументу(
			Ссылка,
			ДополнительныеСвойства.ДинамическиеТитулыДляПривязки
		);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Отключаем проверяемые реквизиты, так как все проверки делаются централизованно в функции Saby_ТранспортнаяНакладная.ОшибкиФЛК
	ПроверяемыеРеквизиты.Очистить();
	
	ПроверяемыеРеквизиты.Добавить("Дата");
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Префикс = "00";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПрефиксОрганизацииДокумента()
	
	РезультатФункции = "00";
	
	ЗапросДанных = Новый Запрос;
	ЗапросДанных.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВложенныйЗапрос.Префикс КАК Префикс,
	|	ВложенныйЗапрос.Порядок КАК Порядок
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.Префикс КАК Префикс,
	|		1 КАК Порядок
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка = &Ссылка1
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Организации.Префикс,
	|		2
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка = &Ссылка2
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Организации.Префикс,
	|		3
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка = &Ссылка3) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";

	ЗапросДанных.УстановитьПараметр("Ссылка1", Отправитель);
	ЗапросДанных.УстановитьПараметр("Ссылка2", Получатель);
	ЗапросДанных.УстановитьПараметр("Ссылка3", Перевозчик);

	ВыборкаДанных = ЗапросДанных.Выполнить().Выбрать();
	Пока ВыборкаДанных.Следующий() Цикл
		РезультатФункции = ВыборкаДанных.Префикс;
	КонецЦикла;
	
	Возврат РезультатФункции;
	
КонецФункции

#КонецОбласти
