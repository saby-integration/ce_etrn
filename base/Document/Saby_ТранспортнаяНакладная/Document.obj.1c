
#Область ПрограммныйИнтерфейс

// Сохраняет данные титула в дополнительные свойства объекта, чтобы в дальнейшем записать их в регистр.
// Используется в том случае, когда документа еще нет в базе на момент загрузки из СБИС.
//
// Параметры:
//  СтруктураТитулаДляРегистра - Структура - Структура данных титула для записи в регистр.
//
Процедура ДобавитьСтруктуруТитулаДляЗаписи(СтруктураТитулаДляРегистра) Экспорт
	
	Если Не ДополнительныеСвойства.Свойство("ТитулыДляПривязки") Тогда
		ДополнительныеСвойства.Вставить("ТитулыДляПривязки", Новый Массив);
	КонецЕсли;
	
	ДополнительныеСвойства.ТитулыДляПривязки.Добавить(СтруктураТитулаДляРегистра);
	
КонецПроцедуры

// Заполняет данные по титулу предшествующему текущему.
//
// Параметры:
//  Вложение - Соответствие - загруженные данные из СБИС.
//  Титул - ПеречислениеСсылка.Saby_ТипТитулаЭтрН - титул, для которо необходимо заполнить прошлый.
//
Процедура ЗаполнитьПрошлыйТитулДляВложения(Вложение, Титул) Экспорт
	
	Если Вложение["ПрошлыйТитул"] <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Период        = Saby_ТНОбщегоНазначенияСервер.ДатаВложения(Вложение, Титул);
	Идентификатор = Saby_ТНОбщегоНазначенияСервер.ИдентификаторВложения(Вложение, Титул);
	
	МаксимальныйПериод = Дата(1, 1, 1);
	ДанныеТитула = Неопределено;
	
	Для Каждого СтруктураТитулаДляРегистра Из ДополнительныеСвойства.ТитулыДляПривязки Цикл
		
		Если СтруктураТитулаДляРегистра.Период >= Период
			Или СтруктураТитулаДляРегистра.ИдентификаторТитула = Идентификатор Тогда
			Продолжить;
		КонецЕсли;
		
		Если МаксимальныйПериод < СтруктураТитулаДляРегистра.Период Тогда
			МаксимальныйПериод = СтруктураТитулаДляРегистра.Период;
			ДанныеТитула = СтруктураТитулаДляРегистра;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеТитула <> Неопределено Тогда
		Вложение.Вставить("ПрошлыйТитул", Перечисления.Saby_ТипТитулаЭтрН.ТитулОтказа(ДанныеТитула.ТипТитула));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	 
	ЭтотОбъект.ДатаИзменения = "";
	ЭтотОбъект.НомерСбис     = "";
	ЭтотОбъект.Комментарий   = "";
	
	ЭтотОбъект.ДоступныеДействия.Очистить();
	ЭтотОбъект.Отметки.Очистить();
	ЭтотОбъект.Штрафы.Очистить();
	ЭтотОбъект.Акты.Очистить();
		
	// Страница "Погрузка"
	
	ЭтотОбъект.Перевозчик_ПриемкаДатаВремя                  = Дата(1, 1, 1, 0, 0, 0);
	ЭтотОбъект.Перевозчик_ПриемкаДатаВремяПрибыл            = Дата(1, 1, 1, 0, 0, 0);
	ЭтотОбъект.Перевозчик_ПриемкаДатаВремяУбыл              = Дата(1, 1, 1, 0, 0, 0);
	ЭтотОбъект.Перевозчик_ПогрузкаЗамечанияПоСостояниюГруза = "";
	ЭтотОбъект.Перевозчик_ЗамечанияПоПогрузочнымРаботам     = "";
	ЭтотОбъект.Перевозчик_ПогрузкаЗамечанияПоМассе          = "";
	ЭтотОбъект.Перевозчик_ПогрузкаЗамечанияПоКоличеству     = "";
	
	Если Не ЭтотОбъект.Отправитель_Экспедитор Тогда
		ЭтотОбъект.Заказчик         = "";
		ЭтотОбъект.Заказчик_Договор = "";
	КонецЕсли;
	
	// Страница "Выгрузка"
	
	// Получатель
	ЭтотОбъект.Выгрузка_ДатаВремяПрибыл   = Дата(1, 1, 1, 0, 0, 0);
	ЭтотОбъект.Выгрузка_ДатаВремяУбыл     = Дата(1, 1, 1, 0, 0, 0);
	ЭтотОбъект.Выгрузка_МассаМетодРасчета = "";
	ЭтотОбъект.Выгрузка_КоличествоМест    = "";
	ЭтотОбъект.Выгрузка_Объем             = "";
	ЭтотОбъект.Выгрузка_МассаБрутто       = "";
	ЭтотОбъект.Выгрузка_МассаНетто        = "";
	ЭтотОбъект.Выгрузка_Состояние         = "";
	
	// Перевозчик
	ЭтотОбъект.Перевозчик_ВыгрузкаДатаВремя                 = Дата(1, 1, 1, 0, 0, 0);
	ЭтотОбъект.Перевозчик_ВыгрузкаДатаВремяПрибыл           = Дата(1, 1, 1, 0, 0, 0);
	ЭтотОбъект.Перевозчик_ВыгрузкаДатаВремяУбыл             = Дата(1, 1, 1, 0, 0, 0);
	ЭтотОбъект.Перевозчик_ВыгрузкаЗамечанияПоСостояниюГруза = "";
	ЭтотОбъект.Перевозчик_ЗамечанияПоРазгрузочнымРаботам    = "";
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВидАвтомобиль = Перечисления.Saby_ВидыТС.Автомобиль;
	
	МассивАвтомобилей = Новый Массив;
	Для Каждого ТранспортноеСредство Из ТранспортныеСредства Цикл
		Если ТранспортноеСредство.Вид = ВидАвтомобиль Тогда
			МассивАвтомобилей.Добавить(ТранспортноеСредство.РегистрационныйНомер);
		КонецЕсли;
	КонецЦикла;
	
	ЭтотОбъект.Отправитель_ТранспортноеСредствоСтрокой = СтрСоединить(МассивАвтомобилей, ", ");
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ТитулыДляПривязки") Тогда
		РегистрыСведений.Saby_ДанныеТитулов.ПривязатьТитулыКДокументу(
			Ссылка,
			ДополнительныеСвойства.ТитулыДляПривязки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Отключаем проверяемые реквизиты,
	// так как все проверки делаются централизованно в функции Saby_ТранспортнаяНакладная.ОшибкиФЛК
	ПроверяемыеРеквизиты.Очистить();
	
	ПроверяемыеРеквизиты.Добавить("Дата");
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Префикс = "00";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПрефиксОрганизацииДокумента()
	
	РезультатФункции = "00";
	
	ЗапросДанных = Новый Запрос;
	ЗапросДанных.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВложенныйЗапрос.Префикс КАК Префикс,
	|	ВложенныйЗапрос.Порядок КАК Порядок
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.Префикс КАК Префикс,
	|		1 КАК Порядок
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка = &Ссылка1
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Организации.Префикс,
	|		2
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка = &Ссылка2
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Организации.Префикс,
	|		3
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка = &Ссылка3) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";

	ЗапросДанных.УстановитьПараметр("Ссылка1", Отправитель);
	ЗапросДанных.УстановитьПараметр("Ссылка2", Получатель);
	ЗапросДанных.УстановитьПараметр("Ссылка3", Перевозчик);

	ВыборкаДанных = ЗапросДанных.Выполнить().Выбрать();
	Пока ВыборкаДанных.Следующий() Цикл
		РезультатФункции = ВыборкаДанных.Префикс;
	КонецЦикла;
	
	Возврат РезультатФункции;
	
КонецФункции

#КонецОбласти
