
#Область include_etrn_base_InformationRegister_ДанныеТитулов_ПолучениеДанныхТитулов //&НаСервере
#КонецОбласти // include_etrn_base_InformationRegister_ДанныеТитулов_ПолучениеДанныхТитулов //&НаСервере

#Область ВыборБанкСчетов

&НаСервере
Процедура УстановкаТипаРасчетныхСчетов(Ссылка = Неопределено)
					
	// Банковские счета
    МассивПроверяемыхТипов = Новый Массив;
	МассивПроверяемыхТипов.Добавить("Справочники.БанковскиеСчета");
	
	Если Ссылка <> Неопределено Тогда
				
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда			
			МассивПроверяемыхТипов.Добавить("Справочники.БанковскиеСчетаКонтрагентов");			
		Иначе 
			МассивПроверяемыхТипов.Добавить("Справочники.БанковскиеСчетаОрганизаций");
		КонецЕсли;
	
	Иначе 
		
		МассивПроверяемыхТипов.Добавить("Справочники.БанковскиеСчетаКонтрагентов");
		МассивПроверяемыхТипов.Добавить("Справочники.БанковскиеСчетаОрганизаций");
		
	КонецЕсли;	
		
	МодульКода("Saby_ТНОбщегоНазначенияСервер").УстановитьОграниченияТипов(
		Элементы.РасчетныйСчетПеревозчик, МассивПроверяемыхТипов);
		
    МодульКода("Saby_ТНОбщегоНазначенияСервер").УстановитьОграниченияТипов(
		Элементы.РасчетныйСчет, МассивПроверяемыхТипов);
		
	УстановкаПараметровВыбораСчетов();	
		
КонецПроцедуры

&НаСервере
Функция РасчетныйСчетПоУмолчанию(Знач СтруктураЮрЛица)
	
	ЮрЛицо = МодульКода("Saby_ТНОбщегоНазначенияСервер").ОрганизацияКонтрагент(СтруктураЮрЛица.ИНН, СтруктураЮрЛица.КПП);
	Если ЮрЛицо.Ссылка = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РасчетныйСчет = Неопределено;
	
	ЕстьМодульБухУчет = Метаданные.ОбщиеМодули.Найти("БухгалтерскийУчетПереопределяемый") <> Неопределено;
	
	Если ЕстьМодульБухУчет Тогда
		
		ОбщийМодульОбъект = МодульКода("Saby_ТНОбщегоНазначенияСервер").ОбщийМодуль("БухгалтерскийУчетПереопределяемый");
		
		// модуль может быть, а процедуры нет... пример УТ 11
		Попытка
			РасчетныйСчет = ОбщийМодульОбъект.ПолучитьБанковскийСчетПоУмолчанию(ЮрЛицо.Ссылка);
		Исключение
			РасчетныйСчет = Неопределено;
		КонецПопытки;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РасчетныйСчет) Тогда
		
		// УТ 11 и т.д... где нет общего модуля получаем все из справочника
		ЕстьСправочникБанкСчета = Метаданные.Справочники.Найти("БанковскиеСчета") <> Неопределено; 
		
		Если Не ЕстьСправочникБанкСчета Тогда  			
			РасчетныйСчет = РасчетныйСчетИзРазделенныхСправочников(ЮрЛицо.Ссылка);					
		Иначе 			
			РасчетныйСчет = РасчетныйСчетИзСправочникаБанковскихСчетов(ЮрЛицо.Ссылка);					
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат РасчетныйСчет;
	
КонецФункции

&НаСервереБезКонтекста
Функция РасчетныйСчетИзСправочникаБанковскихСчетов(ЮрЛицо)
	
	ИмяСправочника = "БанковскиеСчета";
	
	Если Метаданные.Имя = "УправлениеАвтотранспортомПроф" Тогда 
		БанковскиеСчетаОрганизации = Новый ТаблицаЗначений;
		ОбменСКонтрагентамиПереопределяемый.ПолучитьБанковскиеСчета(ЮрЛицо, БанковскиеСчетаОрганизации);
		
		Если БанковскиеСчетаОрганизации.Количество() Тогда
			РасчетныйСчет = БанковскиеСчетаОрганизации[0].БанковскийСчет;
		КонецЕсли;
		
	Иначе 	
		
		ИмяКонстанты   = "ВалютаРегламентированногоУчета";        
		ЕстьКонстанта = Метаданные.Константы.Найти(ИмяКонстанты) <> Неопределено;	
                
		Если ЕстьКонстанта Тогда		
			
			ВалютаРегУчета = Константы[ИмяКонстанты].Получить();
			
			БанковскиеСчетаОрганизации = Справочники[ИмяСправочника].БанковскиеСчетаОрганизации(ЮрЛицо, ВалютаРегУчета);		
			Если БанковскиеСчетаОрганизации.Количество() Тогда
				РасчетныйСчет = БанковскиеСчетаОрганизации[0].Ссылка;
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;		
		
	Возврат РасчетныйСчет;
	
КонецФункции
	
&НаСервереБезКонтекста
Функция РасчетныйСчетИзРазделенныхСправочников(ЮрЛицо)
	
	Если ТипЗнч(ЮрЛицо) = Тип("СправочникСсылка.Организации") Тогда 
		
		ИмяСправочника = "БанковскиеСчетаОрганизаций";  				
		РасчетныйСчет  = Справочники[ИмяСправочника].ПолучитьБанковскийСчетОрганизацииПоУмолчанию(ЮрЛицо);
		
	Иначе 
		
		ИмяСправочника = "БанковскиеСчетаКонтрагентов";				
		РасчетныйСчет  = Справочники[ИмяСправочника].ПолучитьБанковскийСчетПоУмолчанию(ЮрЛицо);
		
	КонецЕсли;  
	
	Возврат РасчетныйСчет;
	
КонецФункции

&НаСервере
Процедура УстановкаПараметровВыбораСчетов()
	
	СтруктураПеревозчика = МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ДанныеЮрЛицаПоРоли(ДанныеЮрЛиц, "Перевозчик");
	
	РезультатПеревозчик = МодульКода("Saby_ТНОбщегоНазначенияСервер").ОрганизацияКонтрагент(
		СтруктураПеревозчика.ИНН, СтруктураПеревозчика.КПП);
		
	Если РезультатПеревозчик.Ссылка <> Неопределено Тогда
		ПараметрыВыбора = Новый Массив;
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СтруктураПеревозчика));
		Элементы.РасчетныйСчетПеревозчик.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	КонецЕсли;
	
	СтруктураПлательщика = МодульКода("Saby_ТНОбщегоНазначенияКлиентСервер").ДанныеЮрЛицаПоРоли(ДанныеЮрЛиц, "ПустаяСсылка");
	
	РезультатПлательщик = МодульКода("Saby_ТНОбщегоНазначенияСервер").ОрганизацияКонтрагент(
		СтруктураПлательщика.ИНН, СтруктураПлательщика.КПП);
		
	Если РезультатПлательщик.Ссылка <> Неопределено Тогда
		ПараметрыВыбораПлательщик = Новый Массив;
		ПараметрыВыбораПлательщик.Добавить(Новый ПараметрВыбора("Отбор.Владелец", РезультатПлательщик.Ссылка));
		Элементы.РасчетныйСчет.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПлательщик);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ВыборБанкСчетов

