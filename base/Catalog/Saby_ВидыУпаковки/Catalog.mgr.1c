
#Область ПрограммныйИнтерфейс

// Загружает с онлайна справочник видов упаковки.
//
// Параметры:
//  МассивНаименований - Массив - массив строк наименований для загрузки, если не передан, то грузятся все.
//  Результат - Структура - если передана, то в переменную возвращается результат загрузки.
//
Процедура ЗагрузитьСОнлайна(МассивНаименований = Неопределено, Результат = Неопределено) Экспорт
	
	ДанныеУпаковки = ДанныеУпаковки(МассивНаименований);
	
	ДанныеУпаковкиДляЗагрузки = ДанныеУпаковкиДляЗагрузки(ДанныеУпаковки);
	
	Загружено = 0;
	ШаблонТекстаОшибки = "Не удалось загрузить ""%1""(%2) по причине: %3";
	МассивОшибок = Новый Массив;
	
	Для Каждого СтруктураДанных Из ДанныеУпаковкиДляЗагрузки Цикл
		
		Если ЗначениеЗаполнено(СтруктураДанных.Ссылка) Тогда
			ОбъектСправочника = СтруктураДанных.Ссылка.ПолучитьОбъект();
		Иначе
			ОбъектСправочника = Справочники.Saby_ВидыУпаковки.СоздатьЭлемент();
		КонецЕсли;
		
		ОбъектСправочника.Код                     = СтруктураДанных.Код;
		ОбъектСправочника.Наименование            = СтруктураДанных.Наименование;
		ОбъектСправочника.ТехническоеНаименование = СтруктураДанных.ТехническоеНаименование;
		ОбъектСправочника.Идентификатор           = СтруктураДанных.Идентификатор;
		
		Попытка
			ОбъектСправочника.Записать();
			Загружено = Загружено + 1;
		Исключение
			ТекстОшибки = СтрШаблон(
				ШаблонТекстаОшибки,
				СтруктураДанных.Наименование,
				СтруктураДанных.Идентификатор,
				ОписаниеОшибки());

			МассивОшибок.Добавить(ТекстОшибки);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ДанныеУпаковкиДляЗагрузки.Количество() > 0 Тогда
		ТекстРезультата = СтрШаблон(
			"Загружено данных %1 из %2",
			Формат(Загружено, "ЧДЦ=0; ЧГ="),
			Формат(ДанныеУпаковкиДляЗагрузки.Количество(), "ЧДЦ=0; ЧГ="));
	Иначе
		ТекстРезультата = "Данные справочника актуальны. Загрузка не требуется";
	КонецЕсли;
	ОписаниеОшибок = СтрСоединить(МассивОшибок, Символы.ПС);
	
	Если Результат = Неопределено Тогда
		Если Загружено <> ДанныеУпаковкиДляЗагрузки.Количество() Тогда
			Saby_ТНОбщегоНазначенияСервер.ЗаписатьОшибкуВЖурналРегистрации(
				Справочники.Saby_ОпасныеГрузы.ПустаяСсылка(), ТекстРезультата, ОписаниеОшибок);
		КонецЕсли;
	Иначе
		Результат.Вставить("Текст",          ТекстРезультата);
		Результат.Вставить("ОписаниеОшибок", ОписаниеОшибок);
	КонецЕсли;
	
КонецПроцедуры

// Дозаполняет реквизиты справочника после получения данных при чтении документа.
//
Процедура ДозаполнитьНовыеЭлементыДаннымиСОнлайна() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Saby_ВидыУпаковки.Наименование КАК Наименование,
	|	Saby_ВидыУпаковки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Saby_ВидыУпаковки КАК Saby_ВидыУпаковки
	|ГДЕ
	|	Saby_ВидыУпаковки.Идентификатор = &Идентификатор
	|	И НЕ Saby_ВидыУпаковки.ПометкаУдаления";
	
	Saby_ТНОбщегоНазначенияСервер.ДозаполнитьНовыеЭлементыДаннымиСОнлайна(ТекстЗапроса, Справочники.Saby_ВидыУпаковки);
	
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает признак необходимости дозаполнения справочника данными с онлайна.
//
// Возвращаемое значение:
//   Строка - строковое значение признака.
//
Функция ИдентификаторДозаполнения() Экспорт
	
	Возврат "Дозаполнить виды упаковки с онлайна";
	
КонецФункции

Функция ПреобразоватьНаименование(Наименование) Экспорт
	
	Возврат ВРег(СокрЛП(Наименование));
	
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

#Область ЗагрузкаСОнлайна

Функция ДанныеУпаковки(МассивНаименований = Неопределено)
	
	ДанныеСправочника = Saby_ТНОбщегоНазначенияСервер.СправочникСОнлайна("Вид упаковки Меркурия");
	
	ТаблицаДанныхДляЗагрузки = ТаблицаДанныхДляЗагрузки();
	
	НомерСтроки = 1;
	
	Для Каждого МассивДанных Из ДанныеСправочника Цикл
		
		НаименованиеСОнлайна = ПреобразоватьНаименование(МассивДанных[2]);
		КодСОнлайна          = ПреобразоватьНаименование(МассивДанных[4]);
		
		Если МассивНаименований <> Неопределено И МассивНаименований.Найти(НаименованиеСОнлайна) = Неопределено
			И МассивНаименований.Найти(КодСОнлайна) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДанных = ТаблицаДанныхДляЗагрузки.Добавить();
		СтрокаДанных.НомерСтроки = НомерСтроки;
		
		СтрокаДанных.Идентификатор           = МассивДанных[5];
		СтрокаДанных.Наименование            = НаименованиеСОнлайна;
		СтрокаДанных.ТехническоеНаименование = МассивДанных[3];
		СтрокаДанных.Код                     = КодСОнлайна;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Возврат ТаблицаДанныхДляЗагрузки;
	
КонецФункции

Функция ТаблицаДанныхДляЗагрузки()
	
	РезультатФункции = Новый ТаблицаЗначений;
	
	КвалификаторЧисла5 = Новый КвалификаторыЧисла(5, 0, ДопустимыйЗнак.Неотрицательный);
	
	ОписаниеТипаСсылки       = Новый ОписаниеТипов("СправочникСсылка.Saby_ВидыУпаковки");
	ОписаниеТипаНомераСтроки = Новый ОписаниеТипов("Число", КвалификаторЧисла5);
	
	РезультатФункции.Колонки.Добавить("Ссылка",                  ОписаниеТипаСсылки);
	РезультатФункции.Колонки.Добавить("НомерСтроки",             ОписаниеТипаНомераСтроки);
	РезультатФункции.Колонки.Добавить("Идентификатор",           ОписаниеТипаСтрока(36));
	РезультатФункции.Колонки.Добавить("Наименование",            ОписаниеТипаСтрока(150));
	РезультатФункции.Колонки.Добавить("ТехническоеНаименование", ОписаниеТипаСтрока(255));
	РезультатФункции.Колонки.Добавить("Код",                     ОписаниеТипаСтрока(16));
	
	Возврат РезультатФункции;
	
КонецФункции

Функция ОписаниеТипаСтрока(ДлинаСтроки)
	
	Возврат Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(ДлинаСтроки, ДопустимаяДлина.Переменная));
	
КонецФункции

Функция ДанныеУпаковкиДляЗагрузки(ДанныеУпаковки)
	
	РезультатФункции = Новый Массив;
	
	ЗапросДанных = Новый Запрос;
	ЗапросДанных.Текст =
	"ВЫБРАТЬ
	|	ДанныеУпаковки.НомерСтроки КАК НомерСтроки,
	|	ДанныеУпаковки.Идентификатор КАК Идентификатор,
	|	ДанныеУпаковки.Наименование КАК Наименование,
	|	ДанныеУпаковки.ТехническоеНаименование КАК ТехническоеНаименование,
	|	ДанныеУпаковки.Код КАК Код
	|ПОМЕСТИТЬ ТаблицаДанныхУпаковки
	|ИЗ
	|	&ДанныеУпаковки КАК ДанныеУпаковки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	МАКСИМУМ(ВложенныйЗапрос.СсылкаПоИдентификатору) КАК СсылкаПоИдентификатору,
	|	МАКСИМУМ(ВложенныйЗапрос.СсылкаПоКоду) КАК СсылкаПоКоду
	|ПОМЕСТИТЬ СуществующиеСправочники
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДанныхУпаковки.НомерСтроки КАК НомерСтроки,
	|		Saby_ВидыУпаковки.Ссылка КАК СсылкаПоИдентификатору,
	|		ЗНАЧЕНИЕ(Справочник.Saby_ВидыУпаковки.ПустаяСсылка) КАК СсылкаПоКоду
	|	ИЗ
	|		ТаблицаДанныхУпаковки КАК ТаблицаДанныхУпаковки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Saby_ВидыУпаковки КАК Saby_ВидыУпаковки
	|			ПО ТаблицаДанныхУпаковки.Идентификатор = Saby_ВидыУпаковки.Идентификатор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДанныхУпаковки.НомерСтроки,
	|		ЗНАЧЕНИЕ(Справочник.Saby_ВидыУпаковки.ПустаяСсылка),
	|		Saby_ВидыУпаковки.Ссылка
	|	ИЗ
	|		ТаблицаДанныхУпаковки КАК ТаблицаДанныхУпаковки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Saby_ВидыУпаковки КАК Saby_ВидыУпаковки
	|			ПО ТаблицаДанныхУпаковки.Код = Saby_ВидыУпаковки.Код) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхУпаковки.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуществующиеСправочники.СсылкаПоИдентификатору, ЗНАЧЕНИЕ(Справочник.Saby_ВидыУпаковки.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Saby_ВидыУпаковки.ПустаяСсылка)
	|			ТОГДА СуществующиеСправочники.СсылкаПоИдентификатору
	|		КОГДА ЕСТЬNULL(СуществующиеСправочники.СсылкаПоКоду, ЗНАЧЕНИЕ(Справочник.Saby_ВидыУпаковки.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Saby_ВидыУпаковки.ПустаяСсылка)
	|			ТОГДА СуществующиеСправочники.СсылкаПоКоду
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Saby_ВидыУпаковки.ПустаяСсылка)
	|	КОНЕЦ КАК Ссылка
	|ИЗ
	|	ТаблицаДанныхУпаковки КАК ТаблицаДанныхУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Saby_ВидыУпаковки КАК Saby_ВидыУпаковки
	|		ПО ТаблицаДанныхУпаковки.Идентификатор = Saby_ВидыУпаковки.Идентификатор
	|			И ТаблицаДанныхУпаковки.Наименование = Saby_ВидыУпаковки.Наименование
	|			И ТаблицаДанныхУпаковки.ТехническоеНаименование = Saby_ВидыУпаковки.ТехническоеНаименование
	|			И ТаблицаДанныхУпаковки.Код = Saby_ВидыУпаковки.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуществующиеСправочники КАК СуществующиеСправочники
	|		ПО ТаблицаДанныхУпаковки.НомерСтроки = СуществующиеСправочники.НомерСтроки
	|ГДЕ
	|	Saby_ВидыУпаковки.Ссылка ЕСТЬ NULL";
	
	ЗапросДанных.УстановитьПараметр("ДанныеУпаковки", ДанныеУпаковки);
	
	ВыборкаДанных = ЗапросДанных.Выполнить().Выбрать();
	Пока ВыборкаДанных.Следующий() Цикл
		
		СтрокаДанныхУпаковки = ДанныеУпаковки[ВыборкаДанных.НомерСтроки - 1];
		СтрокаДанныхУпаковки.Ссылка = ВыборкаДанных.Ссылка;
		
		РезультатФункции.Добавить(СтрокаДанныхУпаковки);
		
	КонецЦикла;
	
	Возврат РезультатФункции;
	
КонецФункции

#КонецОбласти // ЗагрузкаСОнлайна

#КонецОбласти // СлужебныеПроцедурыИФункции
