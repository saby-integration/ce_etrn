
//DynamicDirective

Функция ВыполнитьНаСервере(ПолноеИмяФункции, Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено)
	
	ЧастиИмени = СтрРазделить(ПолноеИмяФункции, ".");
	ИмяМодуля  = ЧастиИмени[0];
	ИмяФункции = ЧастиИмени[ЧастиИмени.ВГраница()];
	
	МодульКода = МодульКода(ИмяМодуля);
	
	Если ИмяФункции = "ДлительнаяОперация" Тогда
		РезультатФункции = МодульКода.ДлительнаяОперация(Параметр1, Параметр2);
	ИначеЕсли ИмяФункции = "ИдентификаторВСбис" Тогда
		РезультатФункции = МодульКода.ИдентификаторВСбис(Параметр1);
	ИначеЕсли ИмяФункции = "ДанныеПечатнойФормыДляОткрытия" Тогда
		РезультатФункции = МодульКода.ДанныеПечатнойФормыДляОткрытия(Параметр1, Параметр2);
	ИначеЕсли ИмяФункции = "КонтактнаяИнформацияПоПредставлению" Тогда
		РезультатФункции = МодульКода.КонтактнаяИнформацияПоПредставлению(Параметр1, Параметр2);
	ИначеЕсли ИмяФункции = "ПрочитатьJSONДляВебКлиента" Тогда
		РезультатФункции = МодульКода.ПрочитатьJSONДляВебКлиента(Параметр1);
	ИначеЕсли ИмяФункции = "ПараметрыВидаКонтактнойИнформации" Тогда
		РезультатФункции = МодульКода.ПараметрыВидаКонтактнойИнформации(Параметр1);
	ИначеЕсли ИмяФункции = "АктивныйЭтапСтрокой" Тогда
		РезультатФункции = МодульКода.АктивныйЭтапСтрокой(Параметр1);
	ИначеЕсли ИмяФункции = "ПоследнееУспешноЗагруженноеИзменение" Тогда
		РезультатФункции = МодульКода.ПоследнееУспешноЗагруженноеИзменение(Параметр1);
	ИначеЕсли ИмяФункции = "ВсеЗначенияПеречисления" Тогда
		РезультатФункции = МодульКода.ВсеЗначенияПеречисления(Параметр1, Параметр2);
	ИначеЕсли ИмяФункции = "ДесериализоватьЗначение" Тогда
		РезультатФункции = МодульКода.ДесериализоватьЗначение(Параметр1);
	ИначеЕсли ИмяФункции = "ОбновитьВнешнийВидЭлементовОшибок" Тогда
		РезультатФункции = МодульКода.ОбновитьВнешнийВидЭлементовОшибок(Параметр1);
	ИначеЕсли ИмяФункции = "АдресВФорматеОбмена" Тогда
		РезультатФункции = МодульКода.АдресВФорматеОбмена(Параметр1);
	ИначеЕсли ИмяФункции = "ДанныеВодителяПоСсылке" Тогда
		РезультатФункции = МодульКода.ДанныеВодителяПоСсылке(Параметр1);
	ИначеЕсли ИмяФункции = "ПреобразоватьСтрокуВДатуЭПД" Тогда
		РезультатФункции = МодульКода.ПреобразоватьСтрокуВДатуЭПД(Параметр1);
	Иначе
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Параметр1", Параметр1);
		СтруктураПараметров.Вставить("Параметр2", Параметр2);
		СтруктураПараметров.Вставить("Параметр3", Параметр3);
		
		РезультатФункции = ВыполнитьНаСервереДополнительно(МодульКода, ИмяФункции, СтруктураПараметров);
		
	КонецЕсли;
	
	Возврат РезультатФункции;

КонецФункции

//DynamicDirective

Функция ВыполнитьНаСервереДополнительно(МодульКода, ИмяФункции, Параметры)
	
	Если ИмяФункции = "ПроверитьНаличиеПараметровПодключения" Тогда
		РезультатФункции = МодульКода.ПроверитьНаличиеПараметровПодключения();
	ИначеЕсли ИмяФункции = "СтруктураОтветственного" Тогда
		РезультатФункции = МодульКода.СтруктураОтветственного(Параметры.Параметр1, Параметры.Параметр2, Параметры.Параметр3);
	ИначеЕсли ИмяФункции = "ДанныеДляОткрытияДокументаВСБИС" Тогда
		РезультатФункции = МодульКода.ДанныеДляОткрытияДокументаВСБИС(Параметры.Параметр1);
	Иначе
		РезультатФункции = Неопределено;
	КонецЕсли;
	
	Возврат РезультатФункции;

КонецФункции

