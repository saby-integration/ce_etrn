
&НаКлиенте
Процедура ДобавитьДанныеЮрЛиц(Форма, СтруктураДанныхЮрЛиц, ПараметрыРеквизитаФормы)
	
	МодульТНОбщегоНазначенияКлиентСервер = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер");
	
	ФормаОбъект = МодульТНОбщегоНазначенияКлиентСервер.ФормаОбъект(Форма);
	
	СтрокаЮрЛиц = СтрокаЮрЛиц(ПараметрыРеквизитаФормы, ФормаОбъект, СтруктураДанныхЮрЛиц.Роль);
	ЗаполнитьЗначенияСвойств(СтрокаЮрЛиц, СтруктураДанныхЮрЛиц);
	
	КлючСтроки = СтрокаЮрЛиц.КлючСтроки;
	Если СтруктураДанныхЮрЛиц.Удалить Тогда
		ФормаОбъект.ДанныеЮрЛиц.Удалить(СтрокаЮрЛиц);
		КлючСтроки = 0;
	КонецЕсли;
	
	Если ПараметрыРеквизитаФормы.ЭтоСтрокаТаблицы Тогда
		ИсходнаяСтрока = ФормаОбъект[ПараметрыРеквизитаФормы.ИмяИсходнойТаблицы].НайтиПоИдентификатору(
			ПараметрыРеквизитаФормы.ИдентификаторИсходнойСтроки);
		Если ИсходнаяСтрока <> Неопределено Тогда
			ИсходнаяСтрока[ПараметрыРеквизитаФормы.ИмяРеквизита] = СтрокаЮрЛиц.НаименованиеОрганизации;
			
			ЕстьКлюч = МодульТНОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойство(
				ИсходнаяСтрока, "КлючСтроки_ДанныеЮрЛиц");
			
			Если ЕстьКлюч Тогда
				ИсходнаяСтрока.КлючСтроки_ДанныеЮрЛиц = КлючСтроки;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Форма[ПараметрыРеквизитаФормы.ИмяРеквизита] = МодульТНОбщегоНазначенияКлиентСервер.ПредставлениеЮрЛицаПоРоли(
			СтрокаЮрЛиц.НаименованиеОрганизации);
	КонецЕсли;
	
	МодульТНОбщегоНазначенияКлиентСервер.ЗаполнитьДополнительныеПоляЮрЛица(
		Форма, СтрокаЮрЛиц, ПараметрыРеквизитаФормы.ДополнительныеПоля, СтруктураДанныхЮрЛиц.РольСтрокой);
	
	ОбновитьКонтактныеДанные(Форма, СтруктураДанныхЮрЛиц, СтрокаЮрЛиц, ПараметрыРеквизитаФормы);
	
КонецПроцедуры

&НаКлиенте
Функция СтрокаЮрЛиц(ПараметрыРеквизитаФормы, ФормаОбъект, Роль)
	
	Если ПараметрыРеквизитаФормы.ЭтоСтрокаТаблицы Тогда
		Если ПараметрыРеквизитаФормы.ИдентификаторСтроки = Неопределено Тогда
			РезультатФункции = ФормаОбъект.ДанныеЮрЛиц.Добавить();
			РезультатФункции.КлючСтроки = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер").НовыйКлючОсновнойСтроки(
				ФормаОбъект, "ДанныеЮрЛиц");
		Иначе
			РезультатФункции = ФормаОбъект.ДанныеЮрЛиц.НайтиПоИдентификатору(ПараметрыРеквизитаФормы.ИдентификаторСтроки);
		КонецЕсли;
	Иначе
		Отбор = Новый Структура;
		Отбор.Вставить("Роль", Роль);
		НайденныеСтроки = ФормаОбъект.ДанныеЮрЛиц.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() Тогда
			РезультатФункции = НайденныеСтроки[0];
		Иначе
			РезультатФункции = ФормаОбъект.ДанныеЮрЛиц.Добавить();
			РезультатФункции.КлючСтроки = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер").НовыйКлючОсновнойСтроки(
				ФормаОбъект, "ДанныеЮрЛиц");
		КонецЕсли;
	КонецЕсли;
	
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьКонтактныеДанные(Форма, СтруктураДанныхЮрЛиц, СтрокаЮрЛиц, ПараметрыРеквизитаФормы)
	
	МодульТНОбщегоНазначенияКлиентСервер = МодульКодаКлиент("Saby_ТНОбщегоНазначенияКлиентСервер");
	
	ФормаОбъект = МодульТНОбщегоНазначенияКлиентСервер.ФормаОбъект(Форма);
	
	Если Не МодульТНОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойство(ФормаОбъект, "КонтактныеДанные") Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Роль",                   СтруктураДанныхЮрЛиц.Роль);
	Отбор.Вставить("КлючСтроки_ДанныеЮрЛиц", СтрокаЮрЛиц.КлючСтроки);
	
	НайденныеСтроки = ФормаОбъект.КонтактныеДанные.НайтиСтроки(Отбор);
	Для Каждого СтрокаДляУдаления Из НайденныеСтроки Цикл
		ФормаОбъект.КонтактныеДанные.Удалить(СтрокаДляУдаления);
	КонецЦикла;
	
	Для Каждого СтруктураКонтактныхДанных Из СтруктураДанныхЮрЛиц.КонтактныеДанные Цикл
		
		СтрокаКонтактныхДанных = ФормаОбъект.КонтактныеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКонтактныхДанных, СтруктураКонтактныхДанных);
		
		СтрокаКонтактныхДанных.КлючСтроки_ДанныеЮрЛиц = СтрокаЮрЛиц.КлючСтроки;
		СтрокаКонтактныхДанных.Роль                   = СтруктураДанныхЮрЛиц.Роль;
		
	КонецЦикла;
	
	РолиДляОбновления = Новый Массив;
	СтруктураРоли = МодульТНОбщегоНазначенияКлиентСервер.СтруктураДанныхРолей();
	ЗаполнитьЗначенияСвойств(СтруктураРоли, СтрокаЮрЛиц);
	СтруктураРоли.РольСтрокой             = СтруктураДанныхЮрЛиц.РольСтрокой;
	СтруктураРоли.ПараметрыРеквизитаФормы = ПараметрыРеквизитаФормы;
	РолиДляОбновления.Добавить(СтруктураРоли);
	
	ДопПараметры = МодульТНОбщегоНазначенияКлиентСервер.ДопПараметрыОбновленияКИ(РолиДляОбновления);
	МодульТНОбщегоНазначенияКлиентСервер.ОбновитьОсновнойНомерТелефона(Форма, ДопПараметры);
	
	МодульТНОбщегоНазначенияКлиентСервер.НастроитьДополнительныеКонтакты(Форма, СтруктураДанныхЮрЛиц.РольСтрокой);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДанныхЮрЛица(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРеквизитаФормы = Результат.ЭлементФормы;
	
	ДобавитьДанныеЮрЛиц(ДополнительныеПараметры.Форма, Результат, ПараметрыРеквизитаФормы);
	
	ДополнительныеПараметры.Форма.Модифицированность = Истина;
	
	Если ДополнительныеПараметры.ПроцедураПослеИзмененияЮрЛица <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ПроцедураПослеИзмененияЮрЛица, Результат);
	КонецЕсли;
	
КонецПроцедуры

