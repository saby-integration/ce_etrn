
//DynamicDirective

// Установливает отборы по связанным таблицам
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма для обновления данных
//  СтруктураСвязанныхТаблиц - Структура - описание связанных таблиц
//  ИмяКлючаОсновнойТаблицы - Строка - имя колонки с ключом строки
//
Процедура УстановитьОтборПоСвязаннымТаблицам(Форма, СтруктураСвязанныхТаблиц, ИмяКлючаОсновнойТаблицы = "КлючСтроки") Экспорт
		
	ФормаОбъект = ФормаОбъект(Форма);
	
	Для Каждого КлючЗначение Из СтруктураСвязанныхТаблиц Цикл
		ИмяОсновнойТаблицы = КлючЗначение.Ключ;
		
		СтрокаОсновнойТаблицы = Форма.Элементы[ИмяОсновнойТаблицы].ТекущаяСтрока;
		Если СтрокаОсновнойТаблицы = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		СтрокаОсновнойТаблицы = ФормаОбъект[ИмяОсновнойТаблицы].НайтиПоИдентификатору(СтрокаОсновнойТаблицы);
		
		ИмяКлючаСвязаннойТаблицы = ИмяКлючаОсновнойТаблицы + "_" + ИмяОсновнойТаблицы;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить(ИмяКлючаСвязаннойТаблицы, СтрокаОсновнойТаблицы[ИмяКлючаОсновнойТаблицы]);
		
		Отбор = Новый ФиксированнаяСтруктура(СтруктураПоиска);
		
		Для Каждого ИмяСвязаннойТаблицы Из КлючЗначение.Значение Цикл
			Форма.Элементы[ИмяСвязаннойТаблицы].ОтборСтрок = Отбор;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

//DynamicDirective

// Удалить строки по связанным таблицам
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма для обновления данных
//  СтруктураСвязанныхТаблиц - Структура - описание связанных таблиц
//  ИмяКлючаОсновнойТаблицы - Строка - имя колонки с ключом строки
//
Процедура УдалитьСтрокиСвязанныхТаблиц(Форма, СтруктураСвязанныхТаблиц, ИмяКлючаОсновнойТаблицы = "КлючСтроки") Экспорт
		
	ФормаОбъект = ФормаОбъект(Форма);
	
	СтруктураПоиска = Новый Структура;
	
	Для Каждого КлючЗначение Из СтруктураСвязанныхТаблиц Цикл
		ИмяОсновнойТаблицы = КлючЗначение.Ключ;
		
		Для Каждого ИдентификаторСтроки Из Форма.Элементы[ИмяОсновнойТаблицы].ВыделенныеСтроки Цикл
			СтрокаОсновнойТаблицы = ФормаОбъект[ИмяОсновнойТаблицы].НайтиПоИдентификатору(ИдентификаторСтроки);
			ИмяКлючаСвязаннойТаблицы = ИмяКлючаОсновнойТаблицы + "_" + ИмяОсновнойТаблицы;
			
			СтруктураПоиска.Вставить(ИмяКлючаСвязаннойТаблицы, СтрокаОсновнойТаблицы[ИмяКлючаОсновнойТаблицы]);
			
			Для Каждого ИмяСвязаннойТаблицы Из КлючЗначение.Значение Цикл
				СтрокиДляУдаления = ФормаОбъект[ИмяСвязаннойТаблицы].НайтиСтроки(СтруктураПоиска);
				Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
					ФормаОбъект[ИмяСвязаннойТаблицы].Удалить(СтрокаДляУдаления);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

//DynamicDirective

// Возвращает новый уникальный ключ строки
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма для обновления данных
//  ИмяОсновнойТаблицы - Строка - имя таблицы, в которой устанавливается ключ
//  ИмяКлючаОсновнойТаблицы - Строка - имя колонки с ключом строки
//
// Возвращаемое значение:
//   Число - новый ключ для строки таблицы
//
Функция НовыйКлючОсновнойСтроки(Форма, ИмяОсновнойТаблицы, ИмяКлючаОсновнойТаблицы = "КлючСтроки") Экспорт
	
	ФормаОбъект = ФормаОбъект(Форма);
	
	ПоследнийКлюч = 0;
	
	Для Каждого СтрокаОсновнойТаблицы Из ФормаОбъект[ИмяОсновнойТаблицы] Цикл
		КлючСтроки = СтрокаОсновнойТаблицы[ИмяКлючаОсновнойТаблицы];
		Если КлючСтроки = Неопределено Тогда
			КлючСтроки = 0;
		КонецЕсли;
		ПоследнийКлюч = Макс(ПоследнийКлюч, КлючСтроки);
	КонецЦикла;
	
	ЕстьКлючПоТаблице = ТипЗнч(Форма) = Тип("Структура")
		И Форма.Свойство("КлючСтроки")
		И Форма.КлючСтроки.Свойство(ИмяОсновнойТаблицы);
	
	Если ПоследнийКлюч = 0 И ЕстьКлючПоТаблице Тогда
		ПоследнийКлюч = Форма.КлючСтроки[ИмяОсновнойТаблицы];
	КонецЕсли;
	
	ПоследнийКлюч = ПоследнийКлюч + 1;
	
	Если ЕстьКлючПоТаблице Тогда
		Форма.КлючСтроки.Вставить(ИмяОсновнойТаблицы, ПоследнийКлюч);
	КонецЕсли;
	
	Возврат ПоследнийКлюч;
	
КонецФункции

//DynamicDirective

// Возвращает ключ строки основной таблицы
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма для обновления данных
//  ИмяОсновнойТаблицы - Строка - имя таблицы, в которой устанавливается ключ
//  ИмяКлючаОсновнойТаблицы - Строка - имя колонки с ключом строки
//
// Возвращаемое значение:
//   Число - новый ключ для строки таблицы
//
Функция НовыйКлючСвязаннойСтроки(Форма, ИмяОсновнойТаблицы, ИмяКлючаОсновнойТаблицы = "КлючСтроки") Экспорт
	
	ФормаОбъект = ФормаОбъект(Форма);
	
	ИдентификаторСтроки   = Форма.Элементы[ИмяОсновнойТаблицы].ТекущаяСтрока;
	СтрокаОсновнойТаблицы = ФормаОбъект[ИмяОсновнойТаблицы].НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Возврат СтрокаОсновнойТаблицы[ИмяКлючаОсновнойТаблицы];
	
КонецФункции

